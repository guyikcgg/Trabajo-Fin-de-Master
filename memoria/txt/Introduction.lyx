#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\master content.lyx
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Part
Presentación del proyecto
\end_layout

\begin_layout Chapter
Introducción
\end_layout

\begin_layout Section
Motivación
\end_layout

\begin_layout Section
Objetivos
\end_layout

\begin_layout Standard

\color red
The main purpose of this contract is to enable an existing implementation
 of TLS to run in a microcontroller based on ARM Cortex-M core.
\end_layout

\begin_layout Standard
Se persigue dotar de seguridad a un sistema Smarthome, compuesto por una
 red de sensores que se comunican con un concentrador (gw).
 Este concentrador se comunica con una red tipo IoT a través de Internet.
 Se usarán protocolos seguros estándar para esta comunicación: TLS.
 La nube elegida es la de Amazon.
 Esta red requiere que los gw se autentiquen.
\end_layout

\begin_layout Subsection
Metodología de trabajo
\end_layout

\begin_layout Standard
primero pc y luego microcontrolador
\end_layout

\begin_layout Standard
Tests a cada paso
\end_layout

\begin_layout Standard
control de versiones con git es fundamental!
\end_layout

\begin_layout Standard
IDE: DAVE
\end_layout

\begin_layout Section
Estructura de la memoria
\end_layout

\begin_layout Chapter
Seguridad en sistemas empotrados
\end_layout

\begin_layout Standard

\color red
Qué entendemos por seguridad y por qué es importante
\end_layout

\begin_layout Standard
Para entender mejor qué elementos deben asegurarse en un sistema empotrado,
 tenemos que tener en cuenta que existen diversas entidades implicadas en
 el desarrollo, fabricación y uso del producto.
 Esto quiere decir que los requisitos de seguridad dependerán de la perspectiva
 desde la que se vea el sistema.
 En este sentido, el usuario estará interesado en mantener la confidencialidad
 y la integridad de los datos que almacena o transmite haciendo uso del
 sistema, mientras que el proveedor de hardware tratará de proteger la propiedad
 intelectual de los módulos provistos al diseñador del dispositivo.
 A pesar de estas diferencias y de los intereses de las distintas partes,
 existe una serie de requisitos generales que deben tenerse en cuenta a
 la hora de diseñar la seguridad del sistema.
\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset

Antes de entrar en faena, dos cosas:
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
1.
 DEBEMOS ASEGURAR MUCHAS COSAS.
 SEGÚN DESDE QUÉ PUNTO DE VISTA VEAMOS EL SISTEMA, TENEMOS DISTINTOS FRENTES.
 Before discussing the common security requirements of em- bedded systems,
 it is important to note that there are many entities involved in a typical
 embedded system design, manufacturing, and usage chain.
 Security requirements vary depending on whose perspective we consider.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
2.
 HEMOS DICHO QUE LOS SISTEMAS EMPOTRADOS SUELEN TENER POCOS RECURSOS.
 ESO VA A SER UN PROBLEMA.
 PERO ES QUE ADEMÁS....
 PUEDEN IR CON BATERÍA!! ESTO COMPLICA LAS COSAS, YA QUE LA SEGURIDAD METE
 UN OVERHEAD IMPORTANTE (más procesamiento => ir más lento y gastar más
 batería).
 
\end_layout

\begin_layout Subsection
Requisitos generales de seguridad
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Qué se debe asegurar y cuáles son las dificultades (escasa CPU, RAM, batería,
 etc).
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Identificación de usuarios
\end_layout

\begin_layout Standard
Se trata del proceso de validar a los usuarios antes de permitirles usar
 es sitema.
 Este requisito es fundamental cuando el sistema proporciona el acceso a
 datos sensibles (como los valores de sensores en un 
\emph on
SmartHome
\emph default
), a servicios restringidos (como llamadas telefónicas) o permite el control
 de otro sistema (como una cerradura electrónica o la calefacción).
\end_layout

\begin_layout Standard
La identificación de usuarios es especialmente importante cuando el sistema
 empotrado puede ser accedido por personas no autorizadas con facilidad,
 como son aquellos que están conectados a Internet.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
relevante en SmartHome (datos de sensores, cerraduras electrónicas) o cualquier
 aplicación que tenga datos sensibles o que permita el control remoto de
 algún cacharro.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Acceso seguro a la red
\end_layout

\begin_layout Standard
Consiste en proporcionar acceso a una conexión de red o aun servicio solo
 si el dispositivo está autorizado.
 Por ejemplo, un router doméstico no debería permitir el acceso a ningún
 dispositivo que haya sido autorizado a usar la red.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
provides a network connection or service access only if the device is authorized.
 -> esto es interesante para las empresas, también en los routers (que no
 se conecte cualquiera)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Comunicación segura
\end_layout

\begin_layout Standard
La comunicación segura incluye varias funciones:
\end_layout

\begin_layout Enumerate
Autenticar las partes a los extremos de la comunicación, ya sean personas
 o sistemas informáticos.
\end_layout

\begin_layout Enumerate
Garantizar la confidencialidad de los datos comunicados, evitando que puedan
 ser leídos por entidades no autorizadas.
\end_layout

\begin_layout Enumerate
Garantizar la integridad de los datos comunicados, evitando que puedan ser
 modificados por entidades no autorizadas.
\end_layout

\begin_layout Enumerate
Evitar el repudio de transacciones.
\end_layout

\begin_layout Enumerate
Proteger la identidad de las entidades que establecen la comunicación.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Tal vez este es el primer requisito que se nos viene a la cabeza cuando
 hablamos de seguridad.
\end_layout

\begin_layout Plain Layout
functions include authenticating communicating peers, ensuring confidentiality
 and integrity of communicated data, preventing repudiation of a communication
 transaction, and protecting the identity of communicating entities.
 -> es lo más evidente: los cacharros deberán identificarse y autenticarse,
 los mensajes intercambiados deben ser confidenciales (por ejemplo, los
 datos de un sensor pueden informarnos de si hay alguien en casa o no),
 integridad de los mensajes (para que nadie nos ponga la calefacción a 200ºC
 si interceptan un mensaje) y el no repudio (si le hemos dicho al banco
 que haga una transferencia - tarjeta bancaria, o le hemos enviado un SMS
 al gato)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Almacenamiento seguro de datos
\end_layout

\begin_layout Standard
Consiste en asegurar la confidencialidad y la integridad de la información
 sensible almacenada en el sistema.
 Por ejemplo, en el caso de una tarjeta bancaria, solo el usuario debería
 poder modificar la clave, y solo el banco debería poder modificar el saldo.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
mandates confidentiality and integrity of sensitive information stored in
 the system.
 -> en el caso de la tarjeta bancaria/DNIe, nadie debería poder acceder
 a las claves que la identifican o al saldo almacenado (en su caso)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Seguridad del contenido
\end_layout

\begin_layout Standard
La seguridad del contenido impone restricciones sobre el acceso o almacenamiento
 de contenido digital.
 De este modo, el usuario de una 
\emph on
SmartTV
\emph default
 solo debería poder acceder al contenido contratado, y no debería poder
 realizar copias ilegales del contenido visualizado.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
enforces the usage restrictions of the digital content stored or accessed
 by the system.
 -> DRM
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Disponibilidad
\end_layout

\begin_layout Standard
Debe garantizarse que el sistema pueda realizar la función para la que fue
 diseñado y dar servicio a los usuarios legítimos en todo momento, no interrumpi
éndose a causa de ataques de denegación de servicio (DoS).
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
ensures that the system can perform its intended function and service legitimate
 users at all times, without being disrupted by denial-of- service attacks.
 -> el sistema que le da de comer al gato no debe quedarse colgado, y la
 camarita debe funcionar y estar disponible en todo momento (un DoS sería
 desastroso en este caso)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "ravi2004security"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
PERO TAMBIÉN...
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset Note Note
status collapsed

\begin_layout Subsubsection
Resistencia a la manipulación 
\emph on
(Tamper resistance)
\end_layout

\begin_layout Plain Layout
Los ataques perpetrados contra los sistemas empotrados pueden explotar vulneravi
lidades a distintos niveles, incluyendo aquellas presentes en el sistema
 operativo y las aplicaciones.
 Estos ataques pueden manipular datos o procesos sensibles (ataques a la
 integridad), revelar información confidencial (ataques a la privacidad)
 o denegar el acceso a los recursos del sistema (ataques a la disponibilidad).
 Por tanto, es necesario desarrollar y desplegar diversas medidas contra
 estos ataques, tanto a nivel software como a nivel hardware.
\end_layout

\begin_layout Plain Layout
\begin_inset Note Comment
status open

\begin_layout Plain Layout
attacks can exploit vul- nerabilities in the operating system (OS) or applicatio
n software.
 attacks manipulate sensitive data or processes (integrity attacks), disclose
 confidential information (privacy attacks), and/or deny access to system
 re- sources (availability attacks), it is necessary to develop and deploy
 various HW/SW countermeasures against these attacks.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Fiabilidad del sistema
\end_layout

\begin_layout Standard
Para decir que un sistema es realmente fiable, no basta con que este funcione
 de forma correcta la mayor parte del tiempo, sino que debe verificarse
 que su funcionamiento es el esperado en todo momento.
 Si además el sistema ha de ser seguro, este debe funcionar incluso cuando
 es sometido a ataques de seguridad.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
La implementación y testeo de sistemas altamente fiables son mucho más complejas
 que las de aquellos sistemas que simplemente funcionan correctamente la
 mayor parte del tiempo.
 Los sistemas seguros se enfrentan a un desafío aún mayor: deben operar
 de forma fiable incluso cuando 
\end_layout

\begin_layout Plain Layout
It is well known that truly reliable systems are much more difficult to
 build than those that merely work most of the time.
 Secure systems face an even greater challenge: they must continue to operate
 reliably despite attacks.
 As systems become more complicated, there are inevitably more possible
 failure modes.
 PUES NECESITAREMOS VERIFICAR DE ALGÚN MODO!
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Cómo se lleva a cabo
\end_layout

\begin_layout Subsubsection
Protocolos de seguridad
\end_layout

\begin_layout Standard
Los protocolos de seguridad proporcionan formas de establecer canales de
 comunicación seguros entre dispositivos.
 Esto se consigue cifrando los datos a transmitir, estableciendo mecanismos
 para asegurar la integridad de los mensajes y autenticando cada uno de
 los extremos de la comunicación.
 De esta forma, dos dispositivos pueden comunicarse de forma segura a través
 de una red no segura 
\emph on
a priori
\emph default
.
\end_layout

\begin_layout Standard
Tal vez los protocolos de seguridad más conocidos sean IPSec y TLS (antes
 SSL), cuyo uso está muy extendido: el primero, en el despliegue de redes
 privadas virtuales (VPN), el segundo, en la realización de transacciones
 web seguras.
 Estos protocolos son prácticamente transparentes para las capas de comunicación
 superiores.
 De este modo, una aplicación que se comunica en red de forma no segura
 puede pasar a establecer una comunicación segura con pocas modificaciones,
 sin necesidad de ser rediseñada desde cero.
 No obstante, los requisitos computacionales que supone el uso de estos
 protocolos pueden comprometer la capacidad computacional del sistema con
 gran facilidad.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
DATOS EN TLS: WolfSSL (memoria) y estudio de esta gente (CPU y tamaño del
 paquete)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A continuación se muestra un
\end_layout

\begin_layout Standard
Por ejemplo, el uso de TLS duplica la 
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
provide ways of ensuring secure communication channels to and from the embedded
 system.
 IPSec [IPSec] and SSL [SSL] are popu- lar examples of security protocols,
 widely used for Virtual Private Networks (VPNs) and secure web transactions,
 respectively (we will be exaamining se- curity protocols in greater detail
 in Section 5).
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Certificados digitales
\end_layout

\begin_layout Standard
Los certificados digitales proporcionan formas de asociar una identidad
 digital con una entidad física, basándose en criptografía asimétrica.
 Se trata de un fichero usado para validar la propiedad de una clave pública.
 El certificado incluye información sobre la clave, la identidad de su propietar
io (sujeto del certificado) y sobre la firma digital de la entidad 
\end_layout

\begin_layout Standard
is an electronic document used to prove the ownership of a public key.
 The certificate includes information about the key, information about the
 identity of its owner (called the subject), and the digital signature of
 an entity that has verified the certificate's contents (called the issuer).
 If the signature is valid, and the software examining the certificate trusts
 the issuer, then it can use that key to communicate securely with the certifica
te's subject.
\end_layout

\begin_layout Standard
provide ways of associating identity with an entity, while biometric technologie
s [Reid 2003] such as fingerprint recognition and voice recognition aid
 in end-user authentication.
 Digital signatures, which func- tion as the electronic equivalent of handwritte
n signatures, can be used to authenticate the source of data as well as
 verify its identity.
 
\end_layout

\begin_layout Subsubsection
Gestión de derechos digitales (DRM)
\end_layout

\begin_layout Standard
protocols, such as OpenIPMP [OpenIPMP], MPEG [MPEG], ISMA [ISMA], and MOSES
 [MOSES], provide secure frameworks for protecting application content against
 unauthorized use.
 
\end_layout

\begin_layout Subsubsection
Almacenamiento y ejecución seguros
\end_layout

\begin_layout Standard
require that the architecture of the sys- tem be tailored for security considera
tions.
 Simple examples include the use of hardware to monitor bus transactions
 and block illegal accesses to protected areas in the memory [Discretix],
 authentication of firmware that executes on the system, application isolation
 to preserve the privacy and integrity of code and data associated with
 a given application or process [Lie et al.
 2000], HW/SW techniques to preserve the privacy and integrity of data throughou
t the memory hierarchy [Suh et al.
 2003], execution of en- crypted code [Best 1981; Kuhn 1997], and so on.
 
\begin_inset CommandInset citation
LatexCommand cite
key "ravi2004security"

\end_inset


\end_layout

\begin_layout Chapter
Estado de la técnica
\end_layout

\begin_layout Standard
QUE QUEDE CLARO LA PARTE INVESTIGADORA AQUI (bibliografia!!)
\end_layout

\begin_layout Section
TLS
\end_layout

\begin_layout Standard
Handshake
\end_layout

\begin_layout Standard
Ciphersuites
\end_layout

\begin_layout Standard
Criptografía asimétrica
\end_layout

\begin_layout Standard
Certificados: TrustChain, PEM, DER
\end_layout

\begin_layout Section
La nube de Amazon IoT
\end_layout

\begin_layout Standard
Amazon Web Services (AWS) ofrece un amplio abanico de servicios de computación
 en la nube.
 Para cada servicio, el usuario debe abonar el precio correspondiente a
 los recursos consumidos.
 Aunque existen varias modalidades de facturación, todas ellas requieren
 que el usuario proporcione un método de pago.
 Sin embargo, existen dos alternativas gratuitas.
\end_layout

\begin_layout Subsubsection
AWS Free Tier
\end_layout

\begin_layout Standard
Amazon establece un período de prueba gratuito para atraer nuevos clientes
 y dar a conocer su tecnología.
 En este período, es posible utilizar la mayoría de los servicios ofrecidos
 por AWS sin incurrir en gastos.
 No obstante, es necesario configurar un método de pago para comenzar a
 usar los servicios.
 Todos los detalles sobre AWS
\begin_inset space ~
\end_inset

Free
\begin_inset space ~
\end_inset

Tier están disponibles en 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://aws.amazon.com/free/
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection
AWS Educate
\end_layout

\begin_layout Standard
AWS
\begin_inset space ~
\end_inset

Educate proporciona a profesores y alumnos acceso a muchos de los servicios
 de AWS.
 Además, incluye ventajas como programas de capacitación y rutas profesionales
 en la nube de Amazon.
 Esta modalidad, que está disponible en 47 países, requiere que el usuario
 esté vinculado a alguna institución académica y procese una solicitud que
 será tratada de forma personalizada por Amazon
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Deberá usarse el correo institucional en la solicitud.
\end_layout

\end_inset

.
 Los detalles de esta modalidad están disponibles en 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://aws.amazon.com/education/
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Nosotros hemos optado por esta segunda opción.
\end_layout

\begin_layout Chapter
Amazon Web Services IoT
\end_layout

\begin_layout Standard
En esta sección describimos la arquitectura de la plataforma de Amazon para
 Internet de las Cosas (AWS
\begin_inset space ~
\end_inset

IoT), explorando su potencial y las particularidades que presenta.
\end_layout

\begin_layout Standard
Como se describe en la documentación oficial (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://docs.aws.amazon.com/iot/latest/developerguide/what-is-aws-iot.html
\end_layout

\end_inset

), AWS
\begin_inset space ~
\end_inset

IoT proporciona una 
\emph on
comunicación bidireccional segura
\emph default
 entre dispositivos conectados a Internet (ya sean sensores, actuadores,
 microcontroladores, electrodomésticos inteligentes, etc.) y la nube de Amazon
 (
\emph on
AWS
\begin_inset space ~
\end_inset

Cloud
\emph default
).
 Esto nos permite recoger, almacenar y analizar datos de una gran variedad
 de dispositivos.
 Del mismo modo, nos permite crear aplicaciones para controlar estos dispositivo
s a través de un 
\emph on
smartphone
\emph default
 o 
\emph on
tablet
\emph default
.
\end_layout

\begin_layout Standard
En este sentido, AWS
\begin_inset space ~
\end_inset

IoT actúa como una pasarela a la cuál pueden conectarse tanto dispositivos
 como aplicaciones de terceros.
 Además, ofrece una interfaz sencilla para procesar los datos recogidos
 a través de los demás servicios de AWS.
 Este modo de operación hace que Amazon haya concentrado sus esfuerzos en
 una plataforma robusta y segura, dando soporte a empresas que desean construir
 aplicaciones complejas y escalables.
 Por este motivo, AWS
\begin_inset space ~
\end_inset

IoT cuenta con un panel de control relativamente complejo, que nos permitirá
 gestionar una multitud de opciones.
 No obstante, esta plataforma no proporciona por sí misma herramientas para
 representar los datos obtenidos.
 Usaremos una aplicación web basada en 
\emph on
Charts.js
\emph default
 y 
\emph on
Bootstrap
\emph default
 como alternativa.
\end_layout

\begin_layout Section
Componentes de AWS IoT
\end_layout

\begin_layout Standard
La plataforma AWS
\begin_inset space ~
\end_inset

IoT está formada por diversos módulos que trabajan orquestados para proporcionar
 la funcionalidad completa ofrecida por este servicio
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
proporcionar todas sus funcionalidades
\end_layout

\end_inset

.
 Con el fin de hacer un uso eficaz de la plataforma, conviene tener una
 imagen global de su arquitectura.
 Solo de este modo entenderemos el significado de las configuraciones llevadas
 a cabo en la siguiente sección.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement t
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../../Internet-de-las-Cosas/doc/img/AWS_IoT23._CB520207442_.png
	lyxscale 60
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Componentes-AWS"

\end_inset

Principales componentes de AWS
\begin_inset space ~
\end_inset

IoT.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Componentes-AWS"

\end_inset

 muestra los componentes principales de AWS
\begin_inset space ~
\end_inset

IoT.
 Los elementos que quedan dentro del recuadro amarillo constituyen la plataforma
 propiamente dicha.
 Fuera del recuadro quedan los 
\emph on
dispositivos
\emph default
, las 
\emph on
aplicaciones
\emph default
 y los 
\emph on
servicios
\emph default
, tanto los de AWS como los de terceras partes.
 A continuación describimos los principales componentes de AWS
\begin_inset space ~
\end_inset

IoT.
\end_layout

\begin_layout Description
Pasarela
\begin_inset space ~
\end_inset

para
\begin_inset space ~
\end_inset

dispositivos
\begin_inset space ~
\end_inset

(
\lang english
Device
\begin_inset space ~
\end_inset

gateway
\lang spanish
) se encarga de establecer la comunicación entre la nube de Amazon y cada
 dispositivo.
 El 
\lang english
Device
\begin_inset space ~
\end_inset

gateway
\lang spanish
 es el responsable de que esta comunicación se lleve a cabo de forma eficiente
 y segura.
\end_layout

\begin_deeper
\begin_layout Description
Agente
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

mensajes
\begin_inset space ~
\end_inset

(
\lang english
Message
\begin_inset space ~
\end_inset

broker
\lang spanish
) proporciona un mecanismo seguro para que los dispositivos y las aplicaciones
 de AWS
\begin_inset space ~
\end_inset

IoT publiquen y reciban mensajes entre sí, basándose en el protocolo MQTT
 o en MQTT sobre WebSocket.
\end_layout

\end_deeper
\begin_layout Description
Motor
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

reglas
\begin_inset space ~
\end_inset

(
\lang english
Rules
\begin_inset space ~
\end_inset

engine
\lang spanish
) proporciona funciones de procesamiento de mensajes y de integración con
 otros sevicios de la nube de Amazon.
 También permite usar el 
\lang english
Message
\begin_inset space ~
\end_inset

broker
\lang spanish
 para volver a publicar mensajes para otros suscriptores.
\end_layout

\begin_layout Description
Registro
\begin_inset space ~
\end_inset

(
\lang english
Registry
\lang spanish
) organiza los recursos asociados a cada dispositivo en la nube de Amazon
 (AWS
\begin_inset space ~
\end_inset

Cloud).
 Es necesario registrar los dispositivos y asociar hasta tres atributos
 personalizados a cada uno.
 Este componente también es responsable de asociar los certificados digitales
 y los IDs de clientes MQTT a cada dispositivo.
\end_layout

\begin_deeper
\begin_layout Description
Registro
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

grupos
\begin_inset space ~
\end_inset

(
\lang english
Group
\begin_inset space ~
\end_inset

registry
\lang spanish
) permite administrar varios dispositivos a la vez clasificándolos en grupos.
\end_layout

\end_deeper
\begin_layout Description
Sombra
\begin_inset space ~
\end_inset

del
\begin_inset space ~
\end_inset

dispositivo
\begin_inset space ~
\end_inset

(
\lang english
Device
\begin_inset space ~
\end_inset

shadow
\lang spanish
) documento JSON utilizado para 
\begin_inset Note Note
status open

\begin_layout Plain Layout
almacenar y recuperar información
\end_layout

\end_inset

 representar el estado actual de un dispositivo.
 También es usado para solicitar una acción al dispositivo.
\end_layout

\begin_layout Standard
AWS
\begin_inset space ~
\end_inset

IoT dispone de otros componentes y servicios con los que el desarrollador
 puede interactuar para realizar algunas tareas de interés, como actualizar
 el firmware de sus dispositivos de forma remota, por ejemplo.
 No obstante, su uso es más avanzado y queda fuera de los objetivos de este
 documento.
\end_layout

\begin_layout Standard
Cabe mencionar que tanto el agente de mensajes como el motor de reglas utilizan
 las características de seguridad de AWS.
 De este modo, los dispositivos y aplicaciones convenientemente autorizados
 pueden establecer una comunicación con AWS
\begin_inset space ~
\end_inset

IoT.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Esquema-de-funcionamiento"

\end_inset

Esquema de funcionamiento
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
un poco de blabla: ahora que conocemos los elementos básicos de la plataforma,
 vamos a ver cómo funcionan y cómo se relacionan con el exterior (nuestro
 dispositivo).
\end_layout

\end_inset

El esquema general de funcionamiento de AWS
\begin_inset space ~
\end_inset

IoT es el siguiente.
\end_layout

\begin_layout Standard
Por un lado, tendremos un dispositivo físico ejecutando el 
\emph on
kit de desarrollo de software del dispositivo
\emph default
 (
\lang english
AWS
\begin_inset space ~
\end_inset

IoT
\begin_inset space ~
\end_inset

Device
\begin_inset space ~
\end_inset

SDK
\lang spanish
).
 Este dispositivo debe disponer de unas credenciales con las que se identificará
 y se autenticará ante la Nube.
 En general, estas credenciales vienen dadas por un certificado digital
 único para cada dispositivo.
 De forma dicional, el dispositivo debe incluir el certificado raíz de autoridad
 certificadora (
\lang english
CA root certificate
\lang spanish
) para autenticar los servidores de Amazon.
\end_layout

\begin_layout Standard
Por otro lado, tendremos que definir el dispositivo en la plataforma, usando
 el Servicio de registro (
\lang english
Registry
\lang spanish
) anteriormente descrito.
 Este dispositivo virtual dispondrá de un 
\emph on
nombre único
\emph default
, que servirá para identificarlo, y de unos 
\emph on
atributos estáticos
\emph default
 a modo de descripción.
 De forma adicional, el dispositivo puede ser de un tipo determinado que
 hayamos definido previamente y puede tener un certificado asociado.
 En general, el dispositivo virtual tendrá asociado el mismo certificado
 digital que instalemos en el dispositivo físico, de forma que AWS
\begin_inset space ~
\end_inset

IoT pueda autenticarlo.
 Este certificado digital puede tener asociada una o varias Políticas de
 uso (
\lang english
Policies
\lang spanish
).
 Gracias a estas políticas de uso, distintos dispositivos tendrán permisos
 para realizar distintas acciones, como puede ser publicar o suscribirse
 en determinados topics, actualizar su sombra, etc.
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Shaded
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "95col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family sans
\series bold
\size small
Nota:
\series default
 Los Atributos estáticos sirven para describir los dispositivos, y su función
 no debe confundirse con la de la Sombra del dispositivo (Device shadow).
 Estos atributos se almacenan de forma estática en el Registro.
 Algunos ejemplos de atributos son: número de serie, versión de firmware
 y descripción del sensor.
 Los valores de sensores y de actuadores se almacenan en un documento dinámico
 denominado 
\emph on
sombra del dispositivo
\emph default
.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Sombra del dispositivo
\end_layout

\begin_layout LyX-Code
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "shadow.json"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:Ejemplo-de-sombra"

\end_inset

Ejemplo de sombra de dispositivo.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El estado actual del dispositivo se guarda en un fichero JSON especial denominad
o sombra del dispositivo (
\lang english
device shadow
\lang spanish
).
 La sombra del dispositivo actúa como un intermediario entre dispositivos
 y aplicaciones, permitiendo que ambas partes tengan acceso el estado del
 dispositivo, pudiendo actualizarlo.
 Para que el estado del dispositivo pueda ser modificado por las aplicaciones,
 cada parámetro definido en la sombra podrá estar bajo una de las siguientes
 categorías:
\end_layout

\begin_layout Standard
Bajo la categoría reported tendremos un informe del estado confeccionado
 por el dispositivo.
 De este modo, podemos decir que los parámetros encontrados en esta categoría
 tienen un significado informativo del estado del dispositivo, y solo el
 dispositivo debería escribir en ellos.
 Es en esta sección donde encontraremos los valores de los sensores.
\end_layout

\begin_layout Standard
En la categoría desired, en cambio, tendremo instrucciones para el dispositivo,
 como el cambio de color de un LED o el accionamiento de un motor.
 Como puede intuirse ya, esta categoría es confeccionada por la aplicación,
 debiendo ser revisada por el dispositivo para ejecutar las acciones solicitadas.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../../Internet-de-las-Cosas/doc/img/AWS_IoT_Shadow_Flow.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Flujo-de-mensajes-sombra"

\end_inset

Flujo de mensajes en la iinteracción entre el dispositivo y una aplicación
 a través de la sombra.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Flujo-de-mensajes-sombra"

\end_inset

 muestra el flujo de mensajes intercambiados entre el dispositivo y la aplicació
n, usando la sombra de intermediario.
\end_layout

\begin_layout Standard
Una ventaja de la existencia de la sombra del dispositivo con respecto a
 otras implementaciones es que puede conocerse el estado del dispositivo
 aunque este se encuentre sin conexión.
 Evidentemente, en este caso no contaremos con el estado actualizado, pero
 podremos visualizar el último estado registrado.
 Además, la sombra cuenta con una serie de metadatos, en los que se incluye
 un sello temporal con la última actualización en cada una de las direcciones.
 Del mismo modo, será posible enviar instrucciones a nuestro dispositivo
 sea cual sea su conectividad.
\end_layout

\begin_layout Standard
El algoritmo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Ejemplo-de-sombra"

\end_inset

 muestra un ejemplo sencillo de sombra de dispositivo, en el que la aplicación
 requiere un cambio de color en el LED del dispositivo.
\end_layout

\begin_layout Subsection
Esquema de conexión
\end_layout

\begin_layout Standard
Como en cualquier esquema IoT, el dispositivo se comunicará con la plataforma
 a través de una conexión a Internet.
 En el caso de AWS
\begin_inset space ~
\end_inset

IoT, la comunicación se lleva a cabo a través del protocolo MQTT, sobre
 un canal seguro TLS.
 Esta conexión se produce en varios pasos:
\end_layout

\begin_layout Standard
En primer lugar, el dispositivo inicia una comunicación segura TLS con el
 servidor de AWS
\begin_inset space ~
\end_inset

IoT, asumiendo el rol de cliente.
 En esta primera comunicación servidor y cliente intercambian y verifican
 el certificado digital de la otra parte.
 De esta forma, la plataforma identifica y autentica el dispositivo, y el
 dispositivo se asegura de la autenticidad del servidor.
 En este proceso se establece una clave con la que se encriptarán todos
 los mensajes.
\end_layout

\begin_layout Standard
Una vez establecida la comunicación segura, el dispositivo puede publicar
 mensajes siguiendo el protocolo MQTT.
 Cuando el dispositivo trata de publicar un mensaje en un 
\lang english
topic
\lang spanish
, la plataforma verifica si este tiene permiso para publicar en dicho 
\lang english
topic
\lang spanish
.
 En caso afirmativo, el message
\begin_inset space ~
\end_inset

broker retransmite este mensaje a cualquier elemento de la red suscrito
 a este topic.
 Del mismo modo, el dispositivo puede suscribirse a cualquier 
\lang english
topic
\lang spanish
 simpre y cuando tenga permisos para ello.
\end_layout

\begin_layout Subsubsection
Actualización de la sombra
\end_layout

\begin_layout Standard
La actualización de la sombra se lleva a cabo publicando mensajes en unos
 topics especiales, destinados a este fin.
 En concreto, están definidos los siguientes 
\lang english
topics
\lang spanish
, donde el dispositivo queda identificado por la variable 
\family typewriter
thingName
\family default
.
\end_layout

\begin_layout Description

\family typewriter
$aws/things/thingName/shadow/update
\family default
 Tanto las aplicaciones como los dispositivos pueden publicar mensajes a
 este 
\lang english
topic
\lang spanish
 para actualizar la sombra.
\end_layout

\begin_layout Description

\family typewriter
$aws/things/thingName/update/accepted
\family default
 AWS
\begin_inset space ~
\end_inset

IoT publica un mensaje en este 
\lang english
topic
\lang spanish
 para confirmar la actualización de la sombra.
\end_layout

\begin_layout Description

\family typewriter
$aws/things/thingName/update/rejected
\family default
 AWS
\begin_inset space ~
\end_inset

IoT publica un mensaje en este 
\lang english
topic
\lang spanish
 para indicar que la actualización de la sombra no tuvo éxito.
\end_layout

\begin_layout Description

\family typewriter
$aws/things/thingName/get
\family default
 Tanto las aplicaciones como los dispositivos pueden publicar un mensaje
 vacío a este 
\lang english
topic
\lang spanish
 para obtener la sombra.
\end_layout

\begin_layout Description

\family typewriter
$aws/things/thingName/get/accepted
\family default
 AWS
\begin_inset space ~
\end_inset

IoT publica un mensaje en este 
\lang english
topic
\lang spanish
 para con la sombra actual.
\end_layout

\begin_layout Description

\family typewriter
$aws/things/thingName/get/rejected
\family default
 AWS
\begin_inset space ~
\end_inset

IoT publica un mensaje de error en este 
\lang english
topic
\lang spanish
 para indicar que no se pudo recuperar la sombra.
\end_layout

\begin_layout Standard
De forma adicional, existen otros 
\lang english
topics
\lang spanish
 especiales relacionados con la sombra, cuyo uso es más avanzado.
\end_layout

\begin_layout Subsubsection
RESTful API
\end_layout

\begin_layout Standard
AWS
\begin_inset space ~
\end_inset

IoT dispone de una API RESTful para permitir que las aplicaciones puedan
 conectarse e interactuar con la sombra a través del protocolo HTTPS.
 En este caso, la seguridad es similar a la llevada a cabo en el caso del
 dispositivo.
 La diferencia es que la aplicación puede tener una credencial basada en
 una tupla (ID,
\begin_inset space ~
\end_inset

clave) en vez de un certificado.
\end_layout

\begin_layout Standard
Para interaccionar con la sombra, la aplicación debe conectarse con la siguiente
 URL:
\end_layout

\begin_layout LyX-Code
https://
\color brown
endpoint
\color inherit
/things/
\color brown
thingName
\color inherit
/shadow
\end_layout

\begin_layout Standard
donde 
\family typewriter
thingName
\family default
 es el nombre que identifica al dispositivo, y 
\family typewriter
endpoint
\family default
 tiene la forma mostrada a continuación.
\end_layout

\begin_layout LyX-Code

\color brown
identifier
\color inherit
.iot.
\color brown
region
\color inherit
.amazonaws.com
\end_layout

\begin_layout Standard
Este endpoint puede ser consultado en la consola de AWS
\begin_inset space ~
\end_inset

IoT, como haremos en el capítulo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "chap:CONECTION"

\end_inset

.
\end_layout

\begin_layout Section
Disparadores y reglas
\end_layout

\begin_layout Standard
AWS
\begin_inset space ~
\end_inset

IoT permite definir reglas con las que pueden realizarse diversas acciones
 al detectar eventos determinados.
 De este modo, es posible redireccionar mensajes entre distintos 
\lang english
topics
\lang spanish
 MQTT, detectar la superación de un umbral en un determinado parámetro,
 detectar la aparición de un mensaje concreto en un 
\lang english
topic
\lang spanish
, etc.
 Las acciones que pueden asociarse a un evento son muy variopintas, pero
 siempre implican una interacción con otros servicios de la nube de Amazon.
 Así, por ejemplo, es posible insertar un nuevo registro en una base de
 datos 
\emph on
AWS
\begin_inset space ~
\end_inset

DynamoDB
\emph default
, invocar una función 
\emph on
AWS
\begin_inset space ~
\end_inset

Lambda
\emph default
 o enviar mensajes específicos a 
\emph on
AWS
\begin_inset space ~
\end_inset

Salesforce
\emph default
.
\end_layout

\begin_layout Standard
En el capítulo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "chap:DASHBOARD"

\end_inset

 definiremos algunas reglas con el objetivo de guardar un histórico de valores
 en una base de datos 
\emph on
AWS
\begin_inset space ~
\end_inset

DynamoDB
\emph default
.
\end_layout

\end_body
\end_document
