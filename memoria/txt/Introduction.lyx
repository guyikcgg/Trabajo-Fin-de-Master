#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\master content.lyx
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Part
Presentación del proyecto
\end_layout

\begin_layout Chapter
Introducción
\end_layout

\begin_layout Section
Motivación
\end_layout

\begin_layout Section
Objetivos
\end_layout

\begin_layout Standard
El objetivo principal de este proyecto es integrar una implementación existente
 del protocolo TLS en un dispositivo IoT basado en microcontrolador.
 Este dispositivo es, en realidad un pasarela (gateway) que permite la conexión
 entre una red local de sensores/actuadores instalada en una Smarthome e
 Internet.
 De este modo, conseguiremos que la transmisión de datos entre la red local
 y la nube se lleve a cabo de forma segura
\begin_inset Note Note
status open

\begin_layout Plain Layout
, permitiendo que el usuario y la casa se sientan seguros ;)
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
De forma más concreta, los objetivos perseguidos en este trabajo fin de
 máster son los siguientes:
\end_layout

\begin_layout Enumerate
Estudio de los conceptos de seguridad en redes, en especial los que aplican
 a sistemas empotrados y al nuevo paradigma IoT.
 Breve presentación de TLS.
\end_layout

\begin_layout Enumerate
Análisis de las implementaciones TLS para sistemas empotrados.
 Elección de una de estas implementaciones.
\end_layout

\begin_layout Enumerate
Integración de la biblioteca TLS seleccionada en el sistema objetivo.
\end_layout

\begin_layout Enumerate
Estudio y presentación de la nube Amazon AWS.
 Breve presentación de MQTT.
\end_layout

\begin_layout Enumerate
Integración del AWS IoT SDK en el sistema objetivo.
 Prueba de concepto.
\end_layout

\begin_layout Standard
La pasarela está diseñada entorno a un microcontrolador XMC4500 de Infineon,
 que a su vez está basado en un núcleo ARM Cortex-M3.
 Esta pasarela deberá comunicarse con la nube de Amazon AWS IoT, con la
 que intercambiará mensajes mediante el protocolo MQTT.
\end_layout

\begin_layout Subsection
Metodología de trabajo
\end_layout

\begin_layout Standard
primero pc y luego microcontrolador
\end_layout

\begin_layout Standard
Tests a cada paso
\end_layout

\begin_layout Standard
El proyecto ha sido puesto bajo control de versiones, usando Git.
 Los sistemas de control de versiones permiten conservar un registro histórico
 de las acciones realizadas, pudiendo volver a estados pasados cuando se
 desee.
 Otra de las ventajas de usar un control de versiones es la posibilidad
 de crear ramas para gestionar las distintas características del proyecto.
 En este trabajo, para cada nueva línea de investigación se ha creado una
 rama, uniéndose los beneficios obtenidos a las ramas comunes.
 En concreto, el sistema de ramificaciones está basado en
\begin_inset CommandInset citation
LatexCommand cite
key "Successful-Git"

\end_inset

.
 Git es además un sistema distribuido, siendo muy sencillo crear un repositorio
 de trabajo y compartirlo para permitir el trabajo en equipo, fundamental
 en cualquier ámbito de desarrollo, ya sea software o hardware.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Fácil integración con el resto del código del gateway: Diseño modular +
 control de versiones
\end_layout

\end_inset


\end_layout

\begin_layout Standard
IDE: DAVE
\end_layout

\begin_layout Section
Estructura de la memoria
\end_layout

\begin_layout Standard
La memoria se estructura en tres grandes partes, que describimos a continuación.
\end_layout

\begin_layout Paragraph
Introducción
\end_layout

\begin_layout Standard
La primera parte está dedicada a una breve introducción y a la presentación
 de las bases teóricas que permitirán una mejor comprensión del desarrollo
 del proyecto.
\end_layout

\begin_layout Standard
En primer lugar, llevaremos a cabo una exposición de los principios básicos
 de seguridad (
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Principios-seguridad"

\end_inset

), prestando especial atención a los requisitos de seguridad en sistemas
 empotrados (
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Seguridad-en-sist-empotrados"

\end_inset

).
\end_layout

\begin_layout Standard
A continuación presentaremos brevemente el protocolo TLS (
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:TLS"

\end_inset

), así como la estructura de la nube AWS IoT (
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:AWS-IoT"

\end_inset

).
\end_layout

\begin_layout Paragraph
Trabajo realizado
\end_layout

\begin_layout Standard
En la segunda parte desarrollamos con detalle el trabajo realizado durante
 la consecución de este proyecto.
\end_layout

\begin_layout Standard
Comenzaremos esta parte con una presentación pormenorizada del sistema objetivo
 (capítulo
\begin_inset space ~
\end_inset

#), a la que seguirá el anális de las imprementaciones TLS existentes y
 se justificará la eleción de mbedTLS (capítulo
\begin_inset space ~
\end_inset

#).
\end_layout

\begin_layout Standard
También presentaremos aquí los detalles de la integración de TLS en el sistema,
 así como los problemas que hemos tenido que resolver durante la misma (capítulo
\begin_inset space ~
\end_inset

#).
 Pondremos fin a esta parte con los detalles de la integración del Kit de
 Desarrollo de Software AWS
\begin_inset space ~
\end_inset

IoT
\begin_inset space ~
\end_inset

SDK (capítulo
\begin_inset space ~
\end_inset

#).
\end_layout

\begin_layout Paragraph
Conclusiones y trabajo futuro
\end_layout

\begin_layout Standard
Para terminar, presentaremos las conclusiones obtenidas de la realización
 de este proyecto, incluyendo una prueba de concepto en la que veremos la
 comunicación entre el dispositivo y la nube IoT (capítulo
\begin_inset space ~
\end_inset

#).
 También expondremos las futuras líneas de trabajo (capítulo
\begin_inset space ~
\end_inset

#).
\end_layout

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:Principios-seguridad"

\end_inset

Principios básicos de criptografía
\end_layout

\begin_layout Standard
El propósito de la criptografía es convertir un mensaje o fichero (
\emph on
texto plano
\emph default
) en algo que a priori carece de sentido (
\emph on
criptograma
\emph default
), de forma que solo las personas autorizadas pueden realizar la transformación
 inversa para acceder al contenido original.
 La operación de transformar el texto plano en un criptograma es conocida
 como 
\emph on
encriptación
\emph default
 o 
\emph on
cifrado
\emph default
, mientras que la operación inversa se denomina 
\emph on
desencriptación
\emph default
 o 
\emph on
descifrado
\emph default
.
 Al contrario de lo que nos dice la intuición, uno de los fundamentos de
 la criptografía moderna, el principio de Kerckhoff, afirma que los algoritmos
 de cifrado y descifrado deben ser públicos.
 El uso de algoritmos secretos es una táctica conocida como 
\emph on
seguridad por oscuridad
\emph default
, y suelen acarrear severos problemas de seguridad.
\end_layout

\begin_layout Standard
En su lugar, la confidencialidad depende de la 
\emph on
clave
\emph default
, que no es más que uno de los parámetros de entrada de los algoritmos de
 cifrado y debe mantenerse en secreto.
 Llamemos 
\begin_inset Formula $P$
\end_inset

 al texto plano, 
\begin_inset Formula $K_{E}$
\end_inset

 a la clave de encriptación, 
\begin_inset Formula $C$
\end_inset

 al criptograma y 
\begin_inset Formula $E$
\end_inset

 al algoritmo o función de encriptación.
 De esta forma, podemos definir el proceso de encriptación con la ecuación
 
\begin_inset Formula $C=E\left(P,K_{E}\right)$
\end_inset

.
 Esto sugiere que para obtener el criptograma es necesario aplicar el algoritmo
 de encriptación sobre el texto plano y el la clave de encriptación, que
 son tomados como parámetros.
\end_layout

\begin_layout Standard
De forma similar, 
\begin_inset Formula $P=D\left(C,K_{D}\right)$
\end_inset

, donde 
\begin_inset Formula $D$
\end_inset

 es el algoritmo de desencriptación y 
\begin_inset Formula $K_{D}$
\end_inset

 es la clave de desencriptación.
 Esto indica que la obtención del texto plano a partir del criptograma pasa
 por aplicar la función de desencriptación al mismo, tomando como segundo
 parámetro la clave de desencriptación.
 La relación entre estas operaciones queda ilustrada en la figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Relacion-plaintext-ciphertext"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/relacion-plain-cipher.eps
	lyxscale 80
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Relacion-plaintext-ciphertext"

\end_inset

Relación entre el texto plano y el texto cifrado.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Criptografía de clave simétrica
\end_layout

\begin_layout Standard
Los algoritmos de cifrado de 
\emph on
clave simétrica
\emph default
 son llamados así porque usan la misma clave en la encriptación y en la
 desencriptación.
 En primer lugar, presentaremos el 
\emph on
cifrado por bloques
\emph default
, que opera sobre bloques de un número 
\begin_inset Formula $n$
\end_inset

 de bits de texto plano, produciendo el criptograma en bloques de la misma
 longitud.
\end_layout

\begin_layout Standard
Los algoritmos criptográficos pueden implementarse en hardware (mayor velocidad)
 o en software (mayor flexibilidad).
 A continuación tratamos algunos aspectos de implementación en hardware
 para ilustrar los principios del cifrado por bloques.
\end_layout

\begin_layout Standard
Cualquier método de cifrado por bloques puede descomponerse en una sucesión
 de 
\emph on
cajas de permutación
\emph default
 (P-box) y 
\emph on
cajas de sustitución
\emph default
 (S-box).
 El número de cajas de cada tipo y su disposición vendrán determinados por
 el algoritmo de cifrado, mientras que su configuración específica vendrá
 dada por la clave.
 Tanto la permutación como la sustitución pueden implementarse con circuitos
 sencillos, como queda ilustrado en la figura
\begin_inset space ~
\end_inset

#.
\end_layout

\begin_layout Standard
Las cajas de permutación producen una reordenación entre los bits de su
 entrada y de su salida, sin modificar el número de ceros o de unos presentes.
 Esto puede conseguirse a través de un cableado arbitrario entre cada uno
 de los bits de entrada y de salida.
 De esta forma, la operación de permutación solo requiere la propagación
 de la señal, que se lleva a cabo sin coste computacional alguno.
 Una caja de permutación correctamente diseñada será capaz de efectuar cualquier
 permutación deseada, reconfigurando su cableado.
 Como puede comprobarse, las cajas de permutación obedecen al principio
 de Kerckhoff: el método utilizado (la permutación de bits) es público,
 lo que se reserva es el orden en que se realiza este cableado, que hará
 las veces de clave.
\end_layout

\begin_layout Standard
Por otro lado, las cajas de sustitución 
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Cualquier método de cifrado por bloques puede verse como un diccionario
 que relaciona de forma única todas las posibles combinaciones de 
\begin_inset Formula $n$
\end_inset

 bits de texto plano con otra combinación (normalmente distinta) del mismo
 número de bits en el criptograma.
 De este modo, podemos decir que, 
\end_layout

\begin_layout Plain Layout
En su modo de operación más básico, cualquier cifrado por bloques actúa
 como un diccionario que permite 
\begin_inset Quotes fld
\end_inset

traducir
\begin_inset Quotes frd
\end_inset

 cualquier bloque de texto plano a otro bloque de la misma longitud del
 criptograma.
 Cuando los bloques 
\end_layout

\begin_layout Plain Layout
Dentro de esta categoría podemos distinguir dos estrategias: por un lado,
 tenemos el cifrado por bloques, que opera sobre bloques de un número 
\begin_inset Formula $n$
\end_inset

 de bits de texto plano, produciendo el criptograma en bloques de la misma
 longitud.
 Por otro lado, tenemos el cifrado de flujo, en los que los dígitos del
 texto plano se combinan con dígitos pseudoaleatorios where plaintext digits
 are combined with a pseudorandom cipher digit stream (keystream).
 In a stream cipher, each plaintext digit is encrypted one at a time with
 the corresponding digit of the keystream, to give a digit of the ciphertext
 stream
\end_layout

\end_inset


\end_layout

\begin_layout Section
Criptografía de clave pública
\end_layout

\begin_layout Section
Funciones unidireccionales
\end_layout

\begin_layout Section
Firmas digitales
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "Tanenbaum-ModernOS"

\end_inset


\end_layout

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:Seguridad-en-sist-empotrados"

\end_inset

Seguridad en sistemas empotrados
\end_layout

\begin_layout Standard
La seguridad suele estar relacionada con operaciones computacionalmente
 costosas.
 Sin embargo, los sistemas empotrados
\begin_inset Note Note
status open

\begin_layout Plain Layout
, como los usados en los nodos finales y en las pasarelas de las infraestructura
s IoT,
\end_layout

\end_inset

 suelen tener unas fuertes limitaciones en los recursos, que van desde limitacio
nes computacionales (microcontroladores) hasta limitaciones energéticas
 (batería)
\begin_inset Note Note
status open

\begin_layout Plain Layout
, que a su vez se traduce en limitaciones en el tiempo de cómputo empleable
\end_layout

\end_inset

.
 Esto hace que la seguridad en sistemas empotrados se trate de un modo algo
 especial.
 
\end_layout

\begin_layout Standard
Para empezar, recordemos que la seguridad es un término que abarca muchos
 ámbitos (y muy variados).
 En el caso de los sistemas empotrados, tendremos diversos actores que se
 preocuparán de la seguridad de formas muy diferentes: El usuario estará
 interesado en mantener la confidencialidad y la integridad de los datos
 que almacena o transmite haciendo uso del sistema.
 El proveedor de hardware, en cambio, tratará de proteger la propiedad intelectu
al de los módulos provistos al diseñador del dispositivo.
 
\end_layout

\begin_layout Standard
Por otro lado, 
\color red
Dado que no tenemos un OS ni un stack que nos proporcione la seguridad,
 tendremos que estudiar los requisitos generales de seguridad y ver cuáles
 son aplicables a nuestro sistema.
\end_layout

\begin_layout Standard

\color red
A pesar de estas diferencias y de los intereses de las distintas partes,
 existe una serie de 
\emph on
requisitos generales
\emph default
 que deben tenerse en cuenta a la hora de diseñar la seguridad del sistema.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename img/actores-implicados-seguridad.png
	lyxscale 10
	width 80col%

\end_inset


\end_layout

\begin_layout Section
Particularidades de los sistemas empotrados
\end_layout

\begin_layout Standard
Como hemos introducido anteriormente, los sistemas empotrados presentan
 varias particularidades.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Un sistema empotrado se define porque resuelve una tarea específica, a pesar
 de hacerlo con un microcontrolador
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los sistemas empotrados (también conocidos como sistemas embebidos o 
\emph on
embedded system
\emph default
s) son sistemas basados en un computador y que están diseñados para realizar
 una función concreta.
 Muchos sistemas empotrados llevan a cabo tareas a tiempo real, siendo frecuente
 su uso en el control de sistemas mecánicos, como ascensores o cadenas de
 montaje.
 
\begin_inset CommandInset citation
LatexCommand cite
key "EmbeddedSysDesign"

\end_inset

 
\end_layout

\begin_layout Standard
Además, estos sistemas están presentes en muchos electrodomésticos, como
 hornos microondas, lavadoras o reproductores de música.
 En este contexto, también los encontramos en el núcleo de muchos dispositivos
 cotidianos, como la calculadora, la cámara de fotos o el marcapasos.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Tanenbaum-ModernOS"

\end_inset


\end_layout

\begin_layout Standard
Podría discutirse si algunos dispositivos como los 
\emph on
smartpohnes
\emph default
 o las videoconsolas de última generación son también sistemas empotrados.
 No obstante, estos dispositivos cuentan con un sistema operativo (OS) que
 les permite ejecutar aplicaciones de terceros bajo demanda del usuario.
 Por este motivo, estos dispositivos serán considerados en este trabajo
 como computadores de propósito general, a pesar de compartir algunas caracterís
ticas con los sistemas empotrados.
\end_layout

\begin_layout Standard
Estas son las principales características que consideraremos para decir
 que un sistema es empotrado:
\end_layout

\begin_layout Itemize
Se trata de un sistema electrónico basado en microprocesador (normalmente
 microcontrolador).
\end_layout

\begin_layout Itemize
El sistema está diseñado para llevar a cabo una aplicación o tarea específica,
 ejecutando un software concreto que es instalado en el proceso de producción.
 El sistema no está diseñado para ejecutar software de terceros.
\end_layout

\begin_layout Itemize
El sistema cuenta con los periféricos necesarios para llevar a cabo su función.
 El sistema está diseñado para controlar este hardware específico, no permitiend
o que se añadan nuevos periféricos.
\end_layout

\begin_layout Itemize
El sistema puede ser el núcleo de un dispositivo autónomo (como un mando
 a distancia), o puede formar parte de un sistema mayor (como las distintas
 unidades de control electrónico de un automóvil).
\end_layout

\begin_layout Itemize
Los recursos computacionales suelen ser muy limitados, con el objetivo de
 abaratar costes.
 Este hecho, junto con el 
\begin_inset Quotes fld
\end_inset

propósito no general
\begin_inset Quotes frd
\end_inset

 de estos sistemas, hace que no tengan sistema operativo (como mucho 
\lang english
scheduler
\lang spanish
 o RTOS)
\end_layout

\begin_layout Standard
En numerosas ocasiones, las tareas deben ser realizadas en tiempo real,
 proporcionando respuestas a ciertos eventos en un intervalo de tiempo controlad
o y reducido.
 Esto tiene gran relación con la tendencia a usar sistemas empotrados en
 la implementación de sistemas críticos.
 Los sistemas críticos deben ser altamente fiables, llevando a cabo su función
 de forma rigurosa y precisa.
 En caso de error, un sistema crítico puede desencadenar un fallo general
 del sistema, incurrir en enormes pérdidas económicas o incluso poner en
 riesgo la vida de personas.
\end_layout

\begin_layout Section
Requisitos generales de seguridad
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Qué se debe asegurar y cuáles son las dificultades (escasa CPU, RAM, batería,
 etc).
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Identificación de usuarios
\end_layout

\begin_layout Standard
Se trata del proceso de validar a los usuarios antes de permitirles usar
 es sitema.
 Este requisito es fundamental cuando el sistema proporciona el acceso a
 datos sensibles (como los valores de sensores en un
\emph on
SmartHome
\emph default
), a servicios restringidos (como llamadas telefónicas) o permite el control
 de otro sistema (como una cerradura electrónica o la calefacción).
\end_layout

\begin_layout Standard
La identificación de usuarios es especialmente importante cuando el sistema
 empotrado puede ser accedido con facilidad por personas no autorizadas,
 como son aquellos que están conectados a Internet.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
relevante en SmartHome (datos de sensores, cerraduras electrónicas) o cualquier
 aplicación que tenga datos sensibles o que permita el control remoto de
 algún cacharro.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Acceso seguro a la red
\end_layout

\begin_layout Standard
Consiste en proporcionar acceso a una conexión de red o a un servicio solo
 si el dispositivo está autorizado.
 Por ejemplo, un router doméstico no debería permitir el acceso a ningún
 dispositivo que haya sido autorizado a usar la red.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Ejemplo con IoT?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
provides a network connection or service access only if the device is authorized.
 -> esto es interesante para las empresas, también en los routers (que no
 se conecte cualquiera)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Comunicación segura
\end_layout

\begin_layout Standard
La comunicación segura incluye varias funciones:
\end_layout

\begin_layout Enumerate
Autenticar las partes a los extremos de la comunicación, ya sean personas
 o sistemas informáticos.
\end_layout

\begin_layout Enumerate
Garantizar la confidencialidad de los datos comunicados, evitando que puedan
 ser leídos por entidades no autorizadas.
\end_layout

\begin_layout Enumerate
Garantizar la integridad de los datos comunicados, evitando que puedan ser
 modificados por entidades no autorizadas.
\end_layout

\begin_layout Enumerate
Evitar el repudio de transacciones, como puede ser una transferencia bancaria.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
hablar de transacciones bancarias? de cambios de domicilio? de pedidos de
 pizza? patentes airbnb?
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Proteger la identidad de las entidades que establecen la comunicación.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Tal vez este es el primer requisito que se nos viene a la cabeza cuando
 hablamos de seguridad.
\end_layout

\begin_layout Plain Layout
functions include authenticating communicating peers, ensuring confidentiality
 and integrity of communicated data, preventing repudiation of a communication
 transaction, and protecting the identity of communicating entities.
 -> es lo más evidente: los cacharros deberán identificarse y autenticarse,
 los mensajes intercambiados deben ser confidenciales (por ejemplo, los
 datos de un sensor pueden informarnos de si hay alguien en casa o no),
 integridad de los mensajes (para que nadie nos ponga la calefacción a 200ºC
 si interceptan un mensaje) y el no repudio (si le hemos dicho al banco
 que haga una transferencia - tarjeta bancaria, o le hemos enviado un SMS
 al gato)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Almacenamiento seguro de datos
\end_layout

\begin_layout Standard
Consiste en asegurar la confidencialidad y la integridad de la información
 sensible almacenada en el sistema.
 Por ejemplo, en el caso de una tarjeta bancaria, solo el usuario debería
 poder modificar la clave, y solo el banco debería poder modificar el saldo.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Ejemplo IoT!!
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
mandates confidentiality and integrity of sensitive information stored in
 the system.
 -> en el caso de la tarjeta bancaria/DNIe, nadie debería poder acceder
 a las claves que la identifican o al saldo almacenado (en su caso)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Disponibilidad
\end_layout

\begin_layout Standard
Debe garantizarse que el sistema pueda realizar la función para la que fue
 diseñado y dar servicio a los usuarios legítimos en todo momento, no interrumpi
éndose a causa de ataques de denegación de servicio (DoS).
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
ensures that the system can perform its intended function and service legitimate
 users at all times, without being disrupted by denial-of- service attacks.
 -> el sistema que le da de comer al gato no debe quedarse colgado, y la
 camarita debe funcionar y estar disponible en todo momento (un DoS sería
 desastroso en este caso)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "ravi2004security"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
PERO TAMBIÉN...
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset Note Note
status collapsed

\begin_layout Subsubsection
Resistencia a la manipulación
\emph on
(Tamper resistance)
\end_layout

\begin_layout Plain Layout
Los ataques perpetrados contra los sistemas empotrados pueden explotar vulneravi
lidades a distintos niveles, incluyendo aquellas presentes en el sistema
 operativo y las aplicaciones.
 Estos ataques pueden manipular datos o procesos sensibles (ataques a la
 integridad), revelar información confidencial (ataques a la privacidad)
 o denegar el acceso a los recursos del sistema (ataques a la disponibilidad).
 Por tanto, es necesario desarrollar y desplegar diversas medidas contra
 estos ataques, tanto a nivel software como a nivel hardware.
\end_layout

\begin_layout Plain Layout
\begin_inset Note Comment
status open

\begin_layout Plain Layout
attacks can exploit vul- nerabilities in the operating system (OS) or applicatio
n software.
 attacks manipulate sensitive data or processes (integrity attacks), disclose
 confidential information (privacy attacks), and/or deny access to system
 re- sources (availability attacks), it is necessary to develop and deploy
 various HW/SW countermeasures against these attacks.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Fiabilidad del sistema
\end_layout

\begin_layout Standard
Para afirmar que un sistema es realmente fiable, no basta con que este funcione
 de forma correcta la mayor parte del tiempo, sino que debe verificarse
 que su funcionamiento es el esperado en todo momento.
 Si además el sistema ha de ser seguro, este debe funcionar incluso cuando
 es sometido a ataques de seguridad.
 La fiabilidad es un requisito fundamental cuando se trata de 
\emph on
sistemas críticos
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
La implementación y testeo de sistemas altamente fiables son mucho más complejas
 que las de aquellos sistemas que simplemente funcionan correctamente la
 mayor parte del tiempo.
 Los sistemas seguros se enfrentan a un desafío aún mayor: deben operar
 de forma fiable incluso cuando
\end_layout

\begin_layout Plain Layout
It is well known that truly reliable systems are much more difficult to
 build than those that merely work most of the time.
 Secure systems face an even greater challenge: they must continue to operate
 reliably despite attacks.
 As systems become more complicated, there are inevitably more possible
 failure modes.
 PUES NECESITAREMOS VERIFICAR DE ALGÚN MODO!
\end_layout

\end_inset


\end_layout

\begin_layout Section
Soluciones de seguridad
\end_layout

\begin_layout Standard
Existen múltiples técnicas con las que se trata de satisfacer los requisitos
 de seguridad presentados en la sección anterior.
 A continuación se presentan algunos de ellos, prestando especial atención
 a los que tienen más relevancia en la realización de este trabajo.
\end_layout

\begin_layout Subsubsection
Protocolos de seguridad
\end_layout

\begin_layout Standard
Los protocolos de seguridad proporcionan formas de establecer canales de
 comunicación seguros entre dispositivos.
 Esto se consigue cifrando los datos a transmitir, estableciendo mecanismos
 para asegurar la integridad de los mensajes y autenticando cada uno de
 los extremos de la comunicación.
 De esta forma, dos dispositivos pueden comunicarse de forma segura a través
 de una red 
\emph on
a priori 
\emph default
no segura.
\end_layout

\begin_layout Standard
Tal vez los protocolos de seguridad más conocidos sean IPSec y TLS (antes
 SSL), cuyo uso está muy extendido: el primero, en el despliegue de redes
 privadas virtuales (VPN), el segundo, en la realización de transacciones
 web seguras.
 Estos protocolos son prácticamente transparentes para las capas de comunicación
 superiores.
 De este modo, una aplicación que se comunica en red de forma no segura
 puede pasar a establecer una comunicación segura con pocas modificaciones,
 sin necesidad de ser rediseñada desde cero.
 No obstante, los requisitos computacionales que supone el uso de estos
 protocolos pueden comprometer la capacidad computacional del sistema con
 gran facilidad.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
DATOS EN TLS: WolfSSL (memoria) y estudio de esta gente (CPU y tamaño del
 paquete)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En el 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:TLS"

\end_inset

 presentamos las características principales del protocolo TLS.
\end_layout

\begin_layout Subsubsection
Certificados digitales
\end_layout

\begin_layout Standard
Los certificados digitales proporcionan formas de asociar una identidad
 digital con una entidad física, basándose en criptografía asimétrica.
 Se trata de un fichero usado para validar la propiedad de una clave pública.
 El certificado incluye información sobre la clave, la identidad de su propietar
io (sujeto del certificado) y sobre la firma digital de la entidad
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename img/cert-digital.gif
	width 50col%

\end_inset


\begin_inset Graphics
	filename img/chain-of-trust.png
	width 50text%

\end_inset


\end_layout

\begin_layout Standard
Esto se cosigue gracias a un documento electrónico (fichero), el propio
 certificado, el cuál contiene información sobre la identidad del usuario/entida
d certificada y su clave pública.
 Este certificado también contiene una firma, emitida por la entidad certificado
ra.
 Se establece una cadena de confianza.
\end_layout

\begin_layout Subsubsection
Almacenamiento y ejecución seguros
\end_layout

\begin_layout Standard
Requieren que la arquitectura del sistema sea diseñada teniendo en cuenta
 la seguridad.
 Ejemplos de soluciones de ejecución segura incluyen 
\end_layout

\begin_layout Standard
el uso de hardware para monitorizar transacciones en un bus, bloqueando
 accesos ilegales a regiones de memoria protegidas.
\end_layout

\begin_layout Standard
autenticación del firmware que se ejecuta en el sistema.
\end_layout

\begin_layout Standard
aislamiento de aplicaciones con el fin de mantener la privacidad y la integridad
 de las instrucciones y de los datos.
\end_layout

\begin_layout Standard
ejecución de código encriptado
\end_layout

\begin_layout Standard
En embebidos: Algunas arquitecturas hardware están diseñadas para la ejecución
 segura [#ref ARM-TrustZone#].
 Existen sistemas operativos de tiempo real diseñados para esta ejecución
 segura #ref!!#.
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "ravi2004security"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
QUE QUEDE CLARO LA PARTE INVESTIGADORA AQUI (bibliografia!!)
\end_layout

\end_inset


\end_layout

\begin_layout Part
Tecnologías usadas
\end_layout

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:TLS"

\end_inset

El protocolo TLS
\end_layout

\begin_layout Standard
En este capítulo, presentamos una introducción al protocolo TLS, en el que
 se revisarán las características principales del mismo.
\end_layout

\begin_layout Standard
Transport Layer Security (TLS) es un protocolo de red cuyo principal objetivo
 es establecer una comunicación segura entre dos nodos de una red que no
 tiene por qué ser segura
\begin_inset Note Note
status open

\begin_layout Plain Layout
 (
\emph on
aunque sí reliable
\emph default
)
\end_layout

\end_inset

.
 Es el sucesor de Secure Sockets Layer, por lo que comparte muchas característic
as con el mismo.
\end_layout

\begin_layout Standard
El protocolo se compone de dos capas, denominadas 
\emph on
TLS Record Protocol
\emph default
 y 
\emph on
TLS Handshake Protocol
\emph default
.
 En el nivel más bajo, justo por encima de algún protocolo de transmisión
 confiable
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Un protocolo de red confiable es aquel que garantiza que los datos serán
 entregados en su destino sin errores y en el mismo orden en que se transmitiero
n.
\end_layout

\end_inset

 (como TCP), se encuentra el 
\emph on
TLS Record Protocol
\emph default
.
 Este protocolo proporciona la seguridad de la conexión, que tiene dos propiedad
es básicas:
\end_layout

\begin_layout Itemize

\series bold
La conexión es privada
\series default
.
 Los datos son encriptados con algoritmos de criptografía simétrica (como
 AES, RC4, etc).
 Las claves usadas en esta encriptación simétrica se generan de forma única
 para cada conexión, a través de una negociación secreta que lleva a cabo
 otro protocolo (como el 
\emph on
TLS Handshake Protocol
\emph default
).
 Aunque no es común, el 
\emph on
TLS Record Protocol
\emph default
 también puede ser usado sin encriptación.
\end_layout

\begin_layout Itemize

\series bold
La conexión es confiable
\series default
.
 El transporte de mensajes incluye una comprobación de la integridad del
 mensaje, que se basa en un código MAC (
\emph on
Message Authentication Code
\emph default
).
 El cálculo del código MAC se lleva a cabo haciendo uso de funciones de
 hash seguras (como SHA).
 Aunque no es común, el 
\emph on
TLS Record Protocol
\emph default
 también puede operar sin el uso de códigos MAC.
\end_layout

\begin_layout Standard
El 
\emph on
TLS Record Protocol
\emph default
 es usado para encapsular otros protocolos de más alto nivel.
 Uno de estos protocolos es el 
\emph on
TLS Handshake Protocol
\emph default
, que permite la autenticación mutua de servidor y cliente y les permite
 negociar los algoritmos de encriptación y las claves antes de que comience
 la transmisión de los datos de aplicación.
 El 
\emph on
TLS Handshake Protocol
\emph default
 proporciona seguridad en la conexión que tiene tres características principales
:
\end_layout

\begin_layout Itemize
Permite autenticar la identidad de los extremos, usando criptografía asimétrica
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Existe una modalidad que permite usar criptografía simétrica en la autenticación
, a través de un sistema de claves compartidas (PSK) 
\begin_inset CommandInset citation
LatexCommand cite
key "rfc4279-TLS+PSK,rfc4285-TLS+PSK-NULL"

\end_inset

.
 Esto puede ser útil en determinadas circunstancias, por ejemplo, si se
 requiere autenticación y los recursos computacionales son muy limitados.
\end_layout

\end_inset

 (como RSA, DSA, etc.).
 Esta autenticación puede ser requerida por la aplicación, o alternativamente,
 hacerse de forma opcional.
\end_layout

\begin_layout Itemize
La negociación de una clave secreta es segura: la clave simétrica negociada
 no puede ser interceptada, ni siquiera por un atacante que se coloque entre
 los nodos y escuche toda la comunicación.
\end_layout

\begin_layout Itemize
La negociación es confiable, de forma que ningún atacante puede modificar
 la negociación sin ser detectado por los nodos.
\end_layout

\begin_layout Standard
TLS se sitúa en la capa de aplicación del modelo OSI.
 Esto quiere decir que son las aplicaciones las que deben incorporar una
 biblioteca 
\begin_inset Note Note
status open

\begin_layout Plain Layout
no hablar de biblioteca: mejor algoritmos o protocolos.
 La biblioteca es la implementación
\end_layout

\end_inset

que les habilite las capacidades de encriptación y de comunicación segura
 que proporciona este protocolo.
 Esto tiene varias implicaciones: Por un lado, los datos viajarán seguros
 desde la aplicación, sin que exista la posibilidad de que estos sean intercepta
dos en una capa de red inferior.
 Por otro lado, el establecimiento de la conexión TLS deberá ser gestionado
 por la misma aplicación, no pudiéndose delegar al sistema operativo.
 Una ventaja de TLS es que es un protocolo independiente de la aplicación.
 Esto quiere decir que sobre él puede situarse cualquier protocolo de nivel
 superior de forma transparente.
\end_layout

\begin_layout Section
Criterios de diseño
\end_layout

\begin_layout Standard
De acuerdo a las especificaciones del protocolo TLS v1.2 
\begin_inset CommandInset citation
LatexCommand cite
key "rfc5246-TLSv1.2"

\end_inset

, los objetivos del mismo, en orden de prioridad, son los siguientes:
\end_layout

\begin_layout Enumerate
Seguridad criptográfica: TLS debería usarse para establecer una conexión
 segura entre dos partes
\end_layout

\begin_layout Enumerate
Interoperabilidad: Programadores independientes deberían poder desarrollar
 aplicaciones usando TLS que puedan intercambiar parámetros criptográficos
 sin tener conocimiento del código de la otra parte.
\end_layout

\begin_layout Enumerate
Extensibilidad: TLS busca proveer una infraestructura en la que puedan incorpora
rse nuevos métodos de encriptación según sea necesrario.
 De esta forma, se evita tener que definir nuevos protocolos de seguridad,
 con las consecuencias que esto tiene: la posibilidad de encontrar brechas
 de seguridad en el nuevo protocolo y la necesidad de implementarlo como
 una nueva biblioteca.
\end_layout

\begin_layout Enumerate
Eficiencia
\begin_inset Note Greyedout
status open

\begin_layout Plain Layout
 relativa
\end_layout

\end_inset

: Las operaciones criptográficas tienden a ser computacionalmente costosas,
 sobre todo cuando se trata de encripación de clave pública.
 Por este motivo, el protocolo TLS trata de reducir el número de conexiones
 que se establecen desde cero, así como reducir la actividad de red.
\end_layout

\begin_layout Section
El 
\emph on
TLS Record Protocol
\end_layout

\begin_layout Standard
Como hemos explicado anteriormente, el 
\emph on
TLS Record Protocol
\emph default
 es la capa más baja del protocolo TLS, y garantiza la comunicación segura
 entre los extremos.
 Los mensajes que van a ser transmitidos son procesados por el 
\emph on
TLS Record Protocol
\emph default
 en los siguientes pasos: los mensajes son fragmentados en bloques de un
 tamaño manejable, luego estos bloques pueden ser comprimidos, al resultado
 se le aplica un código MAC antes de ser encriptado, quedando listo para
 la transmisión.
 En el otro extremo, los datos recibidos son desencriptados, verificados,
 descomprimidos (si procede), reagrupados en los bloques originales y entregados
 a la capa superior.
\end_layout

\begin_layout Standard
Existen cuatro protocolos que hacen uso inmediato del 
\emph on
TLS Record Protocol
\emph default
, que se presentan a continuación.
 Destacaremos que aunque estos son los protocolos definidos en la actualidad,
 el 
\emph on
TLS Record Protocol
\emph default
 puede dar soporte a otros tipos de mensaje (
\emph on
content types
\emph default
).
\end_layout

\begin_layout Subsubsection
Handshake Protocol
\end_layout

\begin_layout Standard
Los parámetros criptográficos que se usarán en la sesión son acordados mediante
 el Handshake Protocol.
 Este protocolo implica el intercambio de varios mensajes entre cliente
 y servidor, en los que se establece un secreto compartido, se lleva a cabo
 la autenticación de los nodos y finalmente, si se verifica que no se ha
 producido ningún intento de ataque, se configuran los parámetros del record
 protocol para que pueda comenzar la transmisión de los datos de aplicación.
\end_layout

\begin_layout Standard
Puesto que este protocolo está íntimamente relacionado con 
\begin_inset Note Note
status open

\begin_layout Plain Layout
el establecimiento de
\end_layout

\end_inset

 los parámetros criptográficos que se usarán en la sesión, y dado que el
 uso de estos parámetros requiere que estén disponibles en la implementación
 TLS a usar, dedicaremos una sección completa al Handshake Protocol más
 adelante en este mismo capítulo.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Pequeña descripción
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Se comentará en más detalle más adelante (cross ref)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Alert Protocol
\end_layout

\begin_layout Standard
Los mensajes de alerta comunican la severidad de una alerta (
\emph on
warning
\emph default
 o 
\emph on
fatal
\emph default
) y su descripción.
 Un mensaje de alerta fatal resulta en la conclusión inmediata de la conexión.
 Como con el resto de protocolos, los mensajes de alerta son encriptados
 y comprimidos sigiuiendo las especificaciones del estado actual de la conexión.
\end_layout

\begin_layout Subsubsection
Change Cipher Spec Protocol
\end_layout

\begin_layout Standard
El 
\lang english
Change Cipher Spec Protocol
\lang spanish
 es usado para notificar un cambio en las estrategias de cifrado.
 El protocolo consiste en un mensaje único, que se comprime y encripta haciendo
 uso de los parámetros de cifrado actuales.
\end_layout

\begin_layout Standard
El mensaje 
\emph on
ChangeCipherSpec
\emph default
 es enviado tanto por el cliente como por el servidor para notificar que
 los mensajes enviados a continuación estarán protegidos atendiendo a las
 nuevas especificaciones de cifrado (
\emph on
CipherSpec
\emph default
) y claves establecidas.
\end_layout

\begin_layout Standard
Para ser más específicos, si un handshake tiene lugar durante una transmisión
 de datos, las partes pueden continuar comunicándose usando los parámetros
 establecidos en la anterior negociación.
 Es el mensaje ChangeCipherSpec el que señala el momento en el que las nuevas
 especificaciones serán usadas, por lo que cualquier mensaje recibido después
 de este deberá atender a los nuevos parámetros y claves de cifrado.
\end_layout

\begin_layout Subsubsection
Application Protocol
\end_layout

\begin_layout Standard
Los datos de aplicación son transportados directamnete por la 
\emph on
Record Layer
\emph default
, donde son fragmentados, comprimidos y encriptados atendiendo al estado
 de la conexión y a sus parámetros.
 De esta manera, los mensajes provenientes de la capa de aplicación son
 tratados de forma transparente por la 
\emph on
Record Layer
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Note Greyedout
status collapsed

\begin_layout Plain Layout
6.2.
 Record Layer
\end_layout

\begin_layout Plain Layout
The TLS record layer receives uninterpreted data from higher layers in non-empty
 blocks of arbitrary size.
\end_layout

\begin_layout Plain Layout
6.2.1.
 Fragmentation
\end_layout

\begin_layout Plain Layout
The record layer fragments information blocks into TLSPlaintext records
 carrying data in chunks of 2^14 bytes or less.
 Client message boundaries are not preserved in the record layer (i.e., multiple
 client messages of the same ContentType MAY be coalesced into a single
 TLSPlaintext record, or a single message MAY be fragmented across several
 records).
\end_layout

\begin_layout Plain Layout
6.2.3.
 Record Payload Protection
\end_layout

\begin_layout Plain Layout
The encryption and MAC functions translate a TLSCompressed structure into
 a TLSCiphertext.
 The decryption functions reverse the process.
 The MAC of the record also includes a sequence number so that missing,
 extra, or repeated messages are detectable.
\end_layout

\end_inset


\end_layout

\begin_layout Section
El 
\emph on
TLS Handshak Protocol
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
TLS cuenta con tres subprotocolos que permiten a los nodos negociar los
 parámetros de seguridad que serán usados en la Record Layer.
 Estos protocolos, además, permiten que los nodos puedan autenticarse, 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como se ha visto anteriormente, TLS tiene tres subprotocolos con los que
 los extremos de la conexión pueden acordar los parámetros de seguridad
 para la record layer, autenticarse e informarse sobre errores producidos
 en la conexión.
\end_layout

\begin_layout Standard
El Handshake Protocol es responsable de negociar la sesión, cuyos principales
 elementos son:
\end_layout

\begin_layout Description
session
\begin_inset space ~
\end_inset

identifier Una secuencia de bytes arbitrarios elegidos por el servidor para
 identificar la sesión activa.
\end_layout

\begin_layout Description
peer
\begin_inset space ~
\end_inset

certificate Certificado del cliente o del servidor, definido por el estándar
 X509v3.
 Este elemento puede no estar presente.
\end_layout

\begin_layout Description
compression
\begin_inset space ~
\end_inset

method El algoritmo utilizado para comprimir datos antes de la encriptación.
\end_layout

\begin_layout Description
cipher
\begin_inset space ~
\end_inset

spec Especifica la función pseudo-aleatoria (pseudorandom function PRF)
 que se usará para usar las claves, el algoritmo de encriptación simétrica
 (como AES, etc.) y el algoritmo de MAC (como HMAC-SHA1).
 También define los atributos criptográficos como la longitud de MAC, entre
 otros.
\end_layout

\begin_layout Description
master
\begin_inset space ~
\end_inset

secret Clave de 48 bytes compartido entre el cliente y el servidor.
\end_layout

\begin_layout Standard
Estos elementos son usados para crear los parámetros de seguridad que la
 Record Layer usará para proteger los datos de aplicación.
 Distintas conexiones pueden ser instanciadas usando la misma sesión, gracias
 a la característica de reanudación del protocolo TLS Handshake Protocol.
\end_layout

\begin_layout Subsection
Funcionamiento del Handshake Protocol
\end_layout

\begin_layout Standard
Los parámetros criptográficos del estado de la sesión son establecidos por
 el TLS Handshake Protocol, el cuál opera sobre la capa TLS record layer.
 Cuando un cliente y un servidor TLS comienzan a comunicarse por primera
 vez, negocian una versión del protocolo, eligen los algoritmos criptográficos,
 se autentican mutuamente (de forma opcional), y usan técnicas de criptografía
 asimétrica para generar claves compartidas.
\end_layout

\begin_layout Standard
El TLS Handshake Protocol implica los siguientes pasos:
\end_layout

\begin_layout Itemize
Intercambio de mensajes 
\emph on
hello
\emph default
 para negociar los algoritmos, intercambiar valores aleatorios y comprobar
 si debe reanudarse una sesión anterior.
\end_layout

\begin_layout Itemize
Intercambio de los parámetros criptográficos necesarios para permitir que
 cliente y servidor puedan compartir una clave 
\emph on
pre-maestra
\emph default
.
\end_layout

\begin_layout Itemize
Intercambio de los certificados e información criptográfica para permitir
 que cliente y servidor puedan autenticarse mutuamente.
\end_layout

\begin_layout Itemize
Generación de una clave maestra (master secret) a partir de la clave pre-maestra
 e intercambiar valores aleatorios.
\end_layout

\begin_layout Itemize
Proporcionar parámetros de seguridad para la record layer.
\end_layout

\begin_layout Itemize
Permitir que cliente y servidor verifiquen que el otro extremo ha calculado
 los mismos parámetros de seguridad y que por tanto el handshake se ha llevado
 a cabo sin la manipulación de un atacante.
\end_layout

\begin_layout Standard
La figura_# muestra los pasos llevados a cabo en el establecimiento de la
 conexión llevada a cabo por el Handshake Protocol.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
the handshake protocol, which can be summarized as follows: The client sends
 a ClientHello message to which the server must respond with a ServerHello
 message, or else a fatal error will occur and the connection will fail.
 The ClientHello and ServerHello are used to establish security enhancement
 capabilities between client and server.
 The ClientHello and ServerHello establish the following attributes: Protocol
 Version, Session ID, Cipher Suite, and Compression Method.
 Additionally, two random values are generated and exchanged: ClientHello.random
 and ServerHello.random.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusión/Resumen?
\end_layout

\begin_layout Standard
TLS permite conexiones seguras a nivel de la capa de aplicación.
 El establecimiento de la conexión se lleva a cabo de forma segura, usando
 criptografía asimétrica para el intercambio de las claves compartidas,
 que serán usadas en el cifrado de los mensajes de aplicación.
 Durante el establecimiento de la conexión, conocido como handshake, los
 nodos pueden autenticarse mutuamente usando certificados digitales X.509.
\end_layout

\begin_layout Standard
El siguiente esquema resume las funcionalidades básicas de los distintos
 subprotocolos de TLS.
\end_layout

\begin_layout Enumerate
Handshake
\end_layout

\begin_deeper
\begin_layout Standard
Se encarga del establecimiento de la conexión entre dos nodos (cliente y
 servidor).
 El handshake conlleva:
\end_layout

\begin_layout Enumerate
Definición de los parámetros de seguridad a usar en la sesión (algoritmos
 de cifrado, clave, compresión, etc.), que son negociados entre cliente y
 servidor, de acuerdo con las funciones criptográficas implementadas en
 cada uno.
\end_layout

\begin_layout Enumerate
Autenticación mutua de los nodos cliente y servidor (opcional, puede llevarse
 a cabo en una única dirección).
\end_layout

\begin_layout Standard
El establecimiento de la conexión implica un esquema de criptografía asimétrica,
 usando claves relativamente largas generadas exclusivamente para la conexión
 a partir de una fuente de entropía.
 Este esquema es computacionalmente muy costoso, pero también muy seguro.
\end_layout

\begin_layout Enumerate
Gracias al esquema de criptografía asimétrica, el contenido del propio handshake
 queda oculto para un observador externo, haciendo imposible deducir los
 parámetros de la sesión.
\end_layout

\begin_layout Enumerate
El handshake cuenta con mecanismos de detección de 
\begin_inset Quotes fld
\end_inset

tampering
\begin_inset Quotes frd
\end_inset

, por lo que un ataque sería detectado.
\end_layout

\end_deeper
\begin_layout Enumerate
Intercambio de datos de aplicación
\end_layout

\begin_deeper
\begin_layout Standard
Los datos de la capa superior son transmitidos de forma transparente, usando
 los parámetros de seguridad establecidos.
\end_layout

\begin_layout Enumerate
Estos datos son cifrados usando criptografía simétrica, haciendo uso de
 la clave acordada durante el handshake.
\end_layout

\begin_layout Enumerate
Los datos de aplicación son comprimidos (de forma opcional) y fragmentados
 para optimizar el uso de la red.
\end_layout

\end_deeper
\begin_layout Enumerate
Cambios de especificación y alertas
\end_layout

\begin_deeper
\begin_layout Standard
Los nodos pueden cambiar los parámetros de seguridad en cualquier momento.
 Además, pueden intercambiar avisos o incluso cerrar la sesión si se detecta
 un problema serio de seguridad.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
QUE QUEDE CLARO LA PARTE INVESTIGADORA AQUI (bibliografia!!)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Este protocolo (TLS) ha inspirado a otros, como DTLS [#ref], que no requiere
 una comunicacion reliable, sino que puede operar sobre protocolos como
 UDP.
 (INTRODUCIR DTLS SI NO SE HA HECHO ANTES).
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Record layer VS Handshake
\end_layout

\begin_layout Plain Layout
Ciphersuites
\end_layout

\begin_layout Plain Layout
Criptografía asimétrica
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:X509"

\end_inset

Certificados digitales X.509
\end_layout

\begin_layout Standard
Certificados: TrustChain, PEM, DER
\end_layout

\begin_layout Standard
ITU-T Standard!
\end_layout

\begin_layout Standard
Contenido del certificado
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Copiar de Tanenbaum
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:AWS-IoT"

\end_inset

Amazon Web Services IoT
\end_layout

\begin_layout Standard
En esta sección describimos la arquitectura de la plataforma de Amazon para
 Internet de las Cosas (AWS
\begin_inset space ~
\end_inset

IoT), explorando su potencial y las particularidades que presenta.
\end_layout

\begin_layout Standard
Como se describe en la documentación oficial (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://docs.aws.amazon.com/iot/latest/developerguide/what-is-aws-iot.html
\end_layout

\end_inset

), AWS
\begin_inset space ~
\end_inset

IoT proporciona una
\emph on
comunicación bidireccional segura
\emph default
 entre dispositivos conectados a Internet (ya sean sensores, actuadores,
 microcontroladores, electrodomésticos inteligentes, etc.) y la nube de Amazon
 (
\emph on
AWS
\begin_inset space ~
\end_inset

Cloud
\emph default
).
 Esto nos permite recoger, almacenar y analizar datos de una gran variedad
 de dispositivos.
 Del mismo modo, nos permite crear aplicaciones para controlar estos dispositivo
s a través de un
\emph on
smartphone
\emph default
 o
\emph on
tablet
\emph default
.
\end_layout

\begin_layout Standard
En este sentido, AWS
\begin_inset space ~
\end_inset

IoT actúa como una pasarela a la cuál pueden conectarse tanto dispositivos
 como aplicaciones de terceros.
 Además, ofrece una interfaz sencilla para procesar los datos recogidos
 a través de los demás servicios de AWS.
 Este modo de operación hace que Amazon haya concentrado sus esfuerzos en
 una plataforma robusta y segura, dando soporte a empresas que desean construir
 aplicaciones complejas y escalables.
 Por este motivo, AWS
\begin_inset space ~
\end_inset

IoT cuenta con un panel de control relativamente complejo, que nos permitirá
 gestionar una multitud de opciones.
 No obstante, esta plataforma no proporciona por sí misma herramientas para
 representar los datos obtenidos.
 Usaremos una aplicación web basada en
\emph on
Charts.js
\emph default
 y
\emph on
Bootstrap
\emph default
 como alternativa.
\end_layout

\begin_layout Section
Componentes de AWS IoT
\end_layout

\begin_layout Standard
La plataforma AWS
\begin_inset space ~
\end_inset

IoT está formada por diversos módulos que trabajan orquestados para proporcionar
 la funcionalidad completa ofrecida por este servicio
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
proporcionar todas sus funcionalidades
\end_layout

\end_inset

.
 Con el fin de hacer un uso eficaz de la plataforma, conviene tener una
 imagen global de su arquitectura.
 Solo de este modo entenderemos el significado de las configuraciones llevadas
 a cabo en la siguiente sección.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement t
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../../Internet-de-las-Cosas/doc/img/AWS_IoT23._CB520207442_.png
	lyxscale 60
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Componentes-AWS"

\end_inset

Principales componentes de AWS
\begin_inset space ~
\end_inset

IoT.
 REF#
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Componentes-AWS"

\end_inset

 muestra los componentes principales de AWS
\begin_inset space ~
\end_inset

IoT.
 Los elementos que quedan dentro del recuadro amarillo constituyen la plataforma
 propiamente dicha.
 Fuera del recuadro quedan los
\emph on
dispositivos
\emph default
, las
\emph on
aplicaciones
\emph default
 y los
\emph on
servicios
\emph default
, tanto los de AWS como los de terceras partes.
 A continuación describimos los principales componentes de AWS
\begin_inset space ~
\end_inset

IoT.
\end_layout

\begin_layout Description
Pasarela
\begin_inset space ~
\end_inset

para
\begin_inset space ~
\end_inset

dispositivos
\begin_inset space ~
\end_inset

(
\lang english
Device
\begin_inset space ~
\end_inset

gateway
\lang spanish
) se encarga de establecer la comunicación entre la nube de Amazon y cada
 dispositivo.
 El
\lang english
Device
\begin_inset space ~
\end_inset

gateway
\lang spanish
 es el responsable de que esta comunicación se lleve a cabo de forma eficiente
 y segura.
\end_layout

\begin_deeper
\begin_layout Description
Agente
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

mensajes
\begin_inset space ~
\end_inset

(
\lang english
Message
\begin_inset space ~
\end_inset

broker
\lang spanish
) proporciona un mecanismo seguro para que los dispositivos y las aplicaciones
 de AWS
\begin_inset space ~
\end_inset

IoT publiquen y reciban mensajes entre sí, basándose en el protocolo MQTT
 o en MQTT sobre WebSocket.
\end_layout

\end_deeper
\begin_layout Description
Motor
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

reglas
\begin_inset space ~
\end_inset

(
\lang english
Rules
\begin_inset space ~
\end_inset

engine
\lang spanish
) proporciona funciones de procesamiento de mensajes y de integración con
 otros sevicios de la nube de Amazon.
 También permite usar el
\lang english
Message
\begin_inset space ~
\end_inset

broker
\lang spanish
 para volver a publicar mensajes para otros suscriptores.
\end_layout

\begin_layout Description
Registro
\begin_inset space ~
\end_inset

(
\lang english
Registry
\lang spanish
) organiza los recursos asociados a cada dispositivo en la nube de Amazon
 (AWS
\begin_inset space ~
\end_inset

Cloud).
 Es necesario registrar los dispositivos y asociar hasta tres atributos
 personalizados a cada uno.
 Este componente también es responsable de asociar los certificados digitales
 y los IDs de clientes MQTT a cada dispositivo.
\end_layout

\begin_deeper
\begin_layout Description
Registro
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

grupos
\begin_inset space ~
\end_inset

(
\lang english
Group
\begin_inset space ~
\end_inset

registry
\lang spanish
) permite administrar varios dispositivos a la vez clasificándolos en grupos.
\end_layout

\end_deeper
\begin_layout Description
Sombra
\begin_inset space ~
\end_inset

del
\begin_inset space ~
\end_inset

dispositivo
\begin_inset space ~
\end_inset

(
\lang english
Device
\begin_inset space ~
\end_inset

shadow
\lang spanish
) documento JSON utilizado para
\begin_inset Note Note
status open

\begin_layout Plain Layout
almacenar y recuperar información
\end_layout

\end_inset

 representar el estado de un dispositivo.
 También es usado para solicitar una acción al dispositivo.
\end_layout

\begin_layout Standard
AWS
\begin_inset space ~
\end_inset

IoT dispone de otros componentes y servicios con los que el desarrollador
 puede interactuar para realizar algunas tareas de interés, como actualizar
 el firmware de sus dispositivos de forma remota, por ejemplo.
 No obstante, su uso es más avanzado y queda fuera de los objetivos de este
 documento.
\end_layout

\begin_layout Standard
Cabe mencionar que tanto el agente de mensajes como el motor de reglas utilizan
 las características de seguridad de AWS.
 De este modo, los dispositivos y aplicaciones convenientemente autorizados
 pueden establecer una comunicación con AWS
\begin_inset space ~
\end_inset

IoT.
\end_layout

\begin_layout Section

\color red
\begin_inset CommandInset label
LatexCommand label
name "sec:Esquema-de-funcionamiento"

\end_inset

Esquema de funcionamiento
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
un poco de blabla: ahora que conocemos los elementos básicos de la plataforma,
 vamos a ver cómo funcionan y cómo se relacionan con el exterior (nuestro
 dispositivo).
\end_layout

\end_inset

El esquema general de funcionamiento de AWS
\begin_inset space ~
\end_inset

IoT es el siguiente.
\end_layout

\begin_layout Standard
Por un lado, tendremos un dispositivo físico ejecutando el
\emph on
kit de desarrollo de software del dispositivo
\emph default
 (
\lang english
AWS
\begin_inset space ~
\end_inset

IoT
\begin_inset space ~
\end_inset

Device
\begin_inset space ~
\end_inset

SDK
\lang spanish
).
 Este dispositivo debe disponer de unas credenciales con las que se identificará
 y se autenticará ante la Nube.
 En general, estas credenciales vienen dadas por un certificado digital
 único para cada dispositivo.
 De forma dicional, el dispositivo debe incluir el certificado raíz de autoridad
 certificadora (
\lang english
CA root certificate
\lang spanish
) para autenticar los servidores de Amazon.
\end_layout

\begin_layout Standard
Por otro lado, tendremos que definir el dispositivo en la plataforma, usando
 el Servicio de registro (
\lang english
Registry
\lang spanish
) anteriormente descrito.
 Este dispositivo virtual dispondrá de un
\emph on
nombre único
\emph default
, que servirá para identificarlo, y de unos
\emph on
atributos estáticos
\emph default
 a modo de descripción.
 De forma adicional, el dispositivo puede ser de un tipo determinado que
 hayamos definido previamente y puede tener un certificado asociado.
 En general, el dispositivo virtual tendrá asociado el mismo certificado
 digital que instalemos en el dispositivo físico, de forma que AWS
\begin_inset space ~
\end_inset

IoT pueda autenticarlo.
 Este certificado digital puede tener asociada una o varias Políticas de
 uso (
\lang english
Policies
\lang spanish
).
 Gracias a estas políticas de uso, distintos dispositivos tendrán permisos
 para realizar distintas acciones, como puede ser publicar o suscribirse
 en determinados topics, actualizar su sombra, etc.
\end_layout

\begin_layout Standard
Cabe destacar que los Atributos estáticos sirven para describir los dispositivos
, y su función no debe confundirse con la de la Sombra del dispositivo (
\lang english
device shadow
\lang spanish
).
 Estos atributos se almacenan de forma estática en el Registro.
 Algunos ejemplos de atributos son: número de serie, versión de firmware
 y descripción del sensor.
 Los valores de sensores y de actuadores se almacenan en un documento dinámico
 denominado
\emph on
 sombra del dispositivo
\emph default
.
\end_layout

\begin_layout Subsection
Sombra del dispositivo
\end_layout

\begin_layout LyX-Code
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "shadow.json"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:Ejemplo-de-sombra"

\end_inset

Ejemplo de sombra de dispositivo.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El estado del dispositivo se guarda en un fichero JSON especial denominado
 sombra del dispositivo (
\lang english
device shadow
\lang spanish
).
 La sombra del dispositivo actúa como un intermediario entre dispositivos
 y aplicaciones, permitiendo que ambas partes tengan acceso el estado del
 dispositivo, pudiendo actualizarlo.
 Para que el estado del dispositivo pueda ser modificado por las aplicaciones,
 cada parámetro definido en la sombra podrá estar bajo una de las siguientes
 categorías:
\end_layout

\begin_layout Standard
Bajo la categoría reported tendremos un informe del estado confeccionado
 por el dispositivo.
 De este modo, podemos decir que los parámetros encontrados en esta categoría
 tienen un significado informativo del estado del dispositivo, y solo el
 dispositivo debería escribir en ellos.
 Es en esta sección donde encontraremos los valores de los sensores.
\end_layout

\begin_layout Standard
En la categoría desired, en cambio, tendremo instrucciones para el dispositivo,
 como el cambio de color de un LED o el accionamiento de un motor.
 Como puede intuirse ya, esta categoría es confeccionada por la aplicación,
 debiendo ser revisada por el dispositivo para ejecutar las acciones solicitadas.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../../Internet-de-las-Cosas/doc/img/AWS_IoT_Shadow_Flow.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Flujo-de-mensajes-sombra"

\end_inset

Flujo de mensajes en la iinteracción entre el dispositivo y una aplicación
 a través de la sombra.
 REF#
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Flujo-de-mensajes-sombra"

\end_inset

 muestra el flujo de mensajes intercambiados entre el dispositivo y la aplicació
n, usando la sombra de intermediario.
\end_layout

\begin_layout Standard
Una ventaja de la existencia de la sombra del dispositivo con respecto a
 otras implementaciones es que puede conocerse el estado del dispositivo
 aunque este se encuentre sin conexión.
 Evidentemente, en este caso no contaremos con el estado actualizado, pero
 podremos visualizar el último estado registrado.
 Además, la sombra cuenta con una serie de metadatos, en los que se incluye
 un sello temporal con la última actualización en cada una de las direcciones.
 Del mismo modo, será posible enviar instrucciones a nuestro dispositivo
 sea cual sea su conectividad.
\end_layout

\begin_layout Standard
El algoritmo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Ejemplo-de-sombra"

\end_inset

 muestra un ejemplo sencillo de sombra de dispositivo, en el que la aplicación
 requiere un cambio de color en el LED del dispositivo.
\end_layout

\begin_layout Subsection
Esquema de conexión
\end_layout

\begin_layout Standard
Como en cualquier esquema IoT, el dispositivo se comunicará con la plataforma
 a través de una conexión a Internet.
 En el caso de AWS
\begin_inset space ~
\end_inset

IoT, la comunicación se lleva a cabo a través del protocolo MQTT, sobre
 un canal seguro TLS.
 Esta conexión se produce en varios pasos:
\end_layout

\begin_layout Standard
En primer lugar, el dispositivo inicia una comunicación segura TLS con el
 servidor de AWS
\begin_inset space ~
\end_inset

IoT, asumiendo el rol de cliente.
 En esta primera comunicación servidor y cliente intercambian y verifican
 el certificado digital de la otra parte.
 De esta forma, la plataforma identifica y autentica el dispositivo, y el
 dispositivo se asegura de la autenticidad del servidor.
 En este proceso se establece una clave con la que se encriptarán todos
 los mensajes.
\end_layout

\begin_layout Standard
Una vez establecida la comunicación segura, el dispositivo puede publicar
 mensajes siguiendo el protocolo MQTT.
 Cuando el dispositivo trata de publicar un mensaje en un
\lang english
topic
\lang spanish
, la plataforma verifica si este tiene permiso para publicar en dicho
\lang english
topic
\lang spanish
.
 En caso afirmativo, el message
\begin_inset space ~
\end_inset

broker retransmite este mensaje a cualquier elemento de la red suscrito
 a este topic.
 Del mismo modo, el dispositivo puede suscribirse a cualquier
\lang english
topic
\lang spanish
 simpre y cuando tenga permisos para ello.
\end_layout

\begin_layout Subsubsection
Actualización de la sombra
\end_layout

\begin_layout Standard
La actualización de la sombra se lleva a cabo publicando mensajes en unos
 topics especiales, destinados a este fin.
 En concreto, están definidos los siguientes
\lang english
topics
\lang spanish
, donde el dispositivo queda identificado por la variable
\family typewriter
thingName
\family default
.
\end_layout

\begin_layout Description

\family typewriter
$aws/things/thingName/shadow/update
\family default
 Tanto las aplicaciones como los dispositivos pueden publicar mensajes a
 este
\lang english
topic
\lang spanish
 para actualizar la sombra.
\end_layout

\begin_layout Description

\family typewriter
$aws/things/thingName/update/accepted
\family default
 AWS
\begin_inset space ~
\end_inset

IoT publica un mensaje en este
\lang english
topic
\lang spanish
 para confirmar la actualización de la sombra.
\end_layout

\begin_layout Description

\family typewriter
$aws/things/thingName/update/rejected
\family default
 AWS
\begin_inset space ~
\end_inset

IoT publica un mensaje en este
\lang english
topic
\lang spanish
 para indicar que la actualización de la sombra no tuvo éxito.
\end_layout

\begin_layout Description

\family typewriter
$aws/things/thingName/get
\family default
 Tanto las aplicaciones como los dispositivos pueden publicar un mensaje
 vacío a este
\lang english
topic
\lang spanish
 para obtener la sombra.
\end_layout

\begin_layout Description

\family typewriter
$aws/things/thingName/get/accepted
\family default
 AWS
\begin_inset space ~
\end_inset

IoT publica un mensaje en este
\lang english
topic
\lang spanish
 para con la sombra actual.
\end_layout

\begin_layout Description

\family typewriter
$aws/things/thingName/get/rejected
\family default
 AWS
\begin_inset space ~
\end_inset

IoT publica un mensaje de error en este
\lang english
topic
\lang spanish
 para indicar que no se pudo recuperar la sombra.
\end_layout

\begin_layout Standard
De forma adicional, existen otros
\lang english
topics
\lang spanish
 especiales relacionados con la sombra, cuyo uso es más avanzado.
\end_layout

\begin_layout Subsubsection
RESTful API
\end_layout

\begin_layout Standard
AWS
\begin_inset space ~
\end_inset

IoT dispone de una API RESTful para permitir que las aplicaciones puedan
 conectarse e interactuar con la sombra a través del protocolo HTTPS.
 En este caso, la seguridad es similar a la llevada a cabo en el caso del
 dispositivo.
 La diferencia es que la aplicación puede tener una credencial basada en
 una tupla (ID,
\begin_inset space ~
\end_inset

clave) en vez de un certificado.
\end_layout

\begin_layout Section
Disparadores y reglas
\end_layout

\begin_layout Standard
AWS
\begin_inset space ~
\end_inset

IoT permite definir reglas con las que pueden realizarse diversas acciones
 al detectar eventos determinados.
 De este modo, es posible redireccionar mensajes entre distintos
\lang english
topics
\lang spanish
 MQTT, detectar la superación de un umbral en un determinado parámetro,
 detectar la aparición de un mensaje concreto en un
\lang english
topic
\lang spanish
, etc.
 Las acciones que pueden asociarse a un evento son muy variopintas, pero
 siempre implican una interacción con otros servicios de la nube de Amazon.
 Así, por ejemplo, es posible insertar un nuevo registro en una base de
 datos
\emph on
AWS
\begin_inset space ~
\end_inset

DynamoDB
\emph default
, invocar una función
\emph on
AWS
\begin_inset space ~
\end_inset

Lambda
\emph default
 o enviar mensajes específicos a
\emph on
AWS
\begin_inset space ~
\end_inset

Salesforce
\emph default
.
\end_layout

\begin_layout Section
Opciones de facturación
\end_layout

\begin_layout Standard
Amazon Web Services (AWS) ofrece un amplio abanico de servicios de computación
 en la nube.
 Para cada servicio, el usuario debe abonar el precio correspondiente a
 los recursos consumidos.
 Aunque existen varias modalidades de facturación, todas ellas requieren
 que el usuario proporcione un método de pago.
 Sin embargo, existen dos alternativas gratuitas.
\end_layout

\begin_layout Subsubsection
AWS Free Tier
\end_layout

\begin_layout Standard
Amazon establece un período de prueba gratuito para atraer nuevos clientes
 y dar a conocer su tecnología.
 En este período, es posible utilizar la mayoría de los servicios ofrecidos
 por AWS sin incurrir en gastos.
 No obstante, es necesario configurar un método de pago para comenzar a
 usar los servicios.
 Todos los detalles sobre AWS
\begin_inset space ~
\end_inset

Free
\begin_inset space ~
\end_inset

Tier están disponibles en
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://aws.amazon.com/free/
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection
AWS Educate
\end_layout

\begin_layout Standard
AWS
\begin_inset space ~
\end_inset

Educate proporciona a profesores y alumnos acceso a muchos de los servicios
 de AWS.
 Además, incluye ventajas como programas de capacitación y rutas profesionales
 en la nube de Amazon.
 Esta modalidad, que está disponible en 47 países, requiere que el usuario
 esté vinculado a alguna institución académica y procese una solicitud que
 será tratada de forma personalizada por Amazon
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Deberá usarse el correo institucional en la solicitud.
\end_layout

\end_inset

.
 Los detalles de esta modalidad están disponibles en
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://aws.amazon.com/education/
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Nosotros hemos optado por esta segunda opción.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Hablar de tarifas después del período gratuito!
\end_layout

\begin_layout Plain Layout
Comparar con: google, ibm, microsoft?
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Análisis de diferentes bibliotecas TLS
\end_layout

\begin_layout Standard
Como se vio en el 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Seguridad-en-sist-empotrados"

\end_inset

, las dos características principales de un sistema empotrado son sus limitacion
es de recursos y la ausencia de un sistema operativo real.
 Estas dos características derivan directamente de la definición de sistema
 empotrado (sistema que realiza una tarea específica), y condicionan por
 completo el desarrollo de su software.
\end_layout

\begin_layout Standard
En el tema que nos ocupa, las limitaciones en los recursos computacionales
 nos llevarán a buscar implementaciones del protocolo TLS ligeras, cuya
 configuración se realice, preferiblemente, en tiempo de compilación.
 También tendremos que asegurarnos de que las implementaciones analizadas
 puedan funcionar con los servicios mínimos proporcionados por un RTOS.
\end_layout

\begin_layout Standard
Dedicaremos el presente capítulo al análisis de diversas implementaciones
 TLS, llevado a cabo tras un ejercicio de búsqueda cuyo objetivo ha sido
 conocer las implementaciones TLS más destacadas en el ámbito de los sistemas
 empotrados.
 Realizaremos este análisis mediante la evaluación de una lista de característic
as, que incluye, pero no se limita a: requisitos computacionales, funcionalidade
s, portabilidad y coste de la implementación.
 Elegiremos la biblioteca TLS atendiendo al análisis presentado a continuación,
 que también contará, de forma adicional, con algunos aspectos económicos
 y de licencia.
\color red

\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color red
The aim of this section is to research and analyze the available TLS libraries.
 WolfSSL and mbedTLS will be first considered and analyzed.
 If other libraries with similar characteristics are found will be considered
 in the study also.
 A list of features will be evaluated, including (but not limiting to) computati
onal requirements, functional capabilities, portability, cost implementation,
 etc.
 Choice of the TLS library to be adapted based on the features previously
 evaluated.
 The decision will be justified using engineering criteria.
 The chosen TLS library will also satisfy the requirements regarding intended
 functionality as well as economical and legal conditions.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Alternativas a OpenSSL.
 Más ligeras, gracias a que pueden elegirse las ciphersuites en tiempo de
 compilación.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Hablar brevemente de mi experiencia con las bibliotecas y chips que he usado
 (características, requisitos en cuanto a recursos, opciones de configuración,
 etc).
\end_layout

\end_inset


\end_layout

\begin_layout Section
Criterios de búsqueda y evaluación
\end_layout

\begin_layout Standard
An initial research of the available TLS libraries has been performed.
 WolfSSL and mbed TLS have been first considered, and they have been analyzed
 more deeply.
 Along with these two options, a wide search for alternatives has been performed
 using several search engines, including Google, Wikipedia, Github and Stackexch
ange.
 The search criteria only included TLS implementations that are actually
 suitable for embedded systems.
 This criteria only involves libraries coded in standard C language and
 having few dependencies.
 These features are indispensable requisites for the target microcontroller-base
d system, and also ensure the compatibility with other software modules.
 The following is a list of the found candidates, with a short description
 of every one of them.
\end_layout

\begin_layout Itemize
activas (en continuo desarrollo): requisito de seguridad, por si se encuentran
 vulnerabilidades
\end_layout

\begin_layout Itemize
coded in standard C language 
\end_layout

\begin_layout Itemize
having few dependencies
\end_layout

\begin_layout Itemize
ciphersuite compatible con AWS IoT (TLS v1.2) 
\begin_inset CommandInset citation
LatexCommand cite
key "AWS-IoT-Security-and-Identity"

\end_inset

 Se recomiendan:
\end_layout

\begin_deeper
\begin_layout Itemize
ECDHE-ECDSA-AES128-GCM-SHA256 (recommended)
\end_layout

\begin_layout Itemize
ECDHE-RSA-AES128-GCM-SHA256 (recommended)
\end_layout

\end_deeper
\begin_layout Standard
Las bibliotecas que no cumplan estos mínimos serán automáticamente descartadas.
 VS No se considerarán bibliotecas que no cumplan estos requisitos.
\end_layout

\begin_layout Standard
Se evaluarán positivamente:
\end_layout

\begin_layout Itemize
Licencias compatibles con la actividad a realizar
\end_layout

\begin_layout Itemize
Precios razonables
\end_layout

\begin_layout Standard
The following criteria have been first analyzed, as they are considered
 of major importance.
 
\end_layout

\begin_layout Standard
Documentation availability – indispensable to check the available features
 and their use, as well as comparing the library’s API and suitability 
\end_layout

\begin_layout Standard
Support for engineers – very convenient in the case support is needed during
 the implementation 
\end_layout

\begin_layout Standard
Source code availability – helps with the task of finding features, makes
 possible the evaluation of the implementation; in the case of open repository
 (like github), the development can be watched closely 
\end_layout

\begin_layout Standard
Presence on social networks – can be used an indicator of how alive the
 company is 
\end_layout

\begin_layout Section
Bibliotecas analizadas
\end_layout

\begin_layout Standard
En esta sección presentaremos brevemente cada una de las bibliotecas analizadas.
 En esta introducción revisaremos algunos datos generales o de especial
 relevancia.
\end_layout

\begin_layout Subsection
mbedTLS
\end_layout

\begin_layout Standard
Initially released in 2006, it supports major TLS protocols and settings.
 It focuses on code clarity and modularity and is extensively documented.
 It is distributed under Apache 2.0 license, making it free of charge for
 commercial use (under the terms of the license).
 This library is now part of ARM, in an effort from the company to expand
 IoT security in its platforms.
\end_layout

\begin_layout Standard
Es la biblioteca de seguridad del proyecto mbed de ARM.
 Este proyecto trata de poner en conjunto una serie de herramientas para
 el desarrollo ágil de sistemas empotrados, incluyendo IoT.
\end_layout

\begin_layout Subsection
WolfSSL
\end_layout

\begin_layout Standard
Initially released in 2006, it supports major TLS protocols and settings.
 It is highly modular and customizable using the extensive preset of Makefiles
 packed with the library.
 A double license is available, including an Open Source license and a commercia
l one – the commercial license costs USD $5000.
 This library is best known for its use in MySQL, thus achieving a high
 distribution volume.
\end_layout

\begin_layout Standard
A version of the wolfCrypt cryptography library has been FIPS 140-2 validated
 (Certificate #2425).
\end_layout

\begin_layout Subsection
MatrixSSL
\end_layout

\begin_layout Standard
Initially released in 2004, it supports major TLS protocols and settings.
 According to its website, it achieves a minimum footprint of about 50KB
 with crypto provider and certificates, or 10KB with PSK only (Tiny version).
 It is distributed under GPLv2 license, though a commercial license is also
 available (price not available on the website).
\end_layout

\begin_layout Subsection
cryptlib
\end_layout

\begin_layout Standard
Initially released in 1995, it supports major TLS protocols and settings.
 A double license is available, including an Open Source license and a commercia
l one – the commercial license costs USD $5000.
\end_layout

\begin_layout Subsection
SharkSSL
\end_layout

\begin_layout Standard
It is the solution offered by Real Time Logic, a company from the US dedicated
 to IoT.
 The company also distributes software for HTTPS, MQTT and SMQ, among others.
 According to the website, SharkSSL can be compiled in less than 38KB ROM,
 needing less than 13KB RAM.
 It is distributed under a private license (price not available on the website).
\end_layout

\begin_layout Section
Comparativa de las bibliotecas
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arrayrulewidth=1.3pt
\end_layout

\end_inset


\size small

\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="6">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="2cm">
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arrayrulecolor{white}
\backslash
rowcolor{head}
\backslash
color{white}
\end_layout

\end_inset


\size small
Implemen-tación
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{white}
\end_layout

\end_inset

WolfSSL
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{white}
\end_layout

\end_inset

mbedTLS
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{white}
\end_layout

\end_inset

MatrixSSL
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{white}
\end_layout

\end_inset

cryptlyb
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{white}
\end_layout

\end_inset

SharkSSL
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Desarrollador
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

WolfSSL Inc.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Arm Limited
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

PeerSec Networks
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Peter Gutmann
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Real Time Logic
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

License
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset


\size small
GPLv2 / comercial
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset


\size small
Apache Licences 2.0 || GPLv2 / comercial
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset


\size small
GPLv2 / comercial
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset


\size small
Licencia Sleepycat / comercial
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset


\size small
Privativa (distribución comercial)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Precio para uso comercial
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

USD $5000
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sin costo (con condiciones)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset


\size small
Información no disponible en la web
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

USD $5000
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset


\size small
Información no disponible en la web
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

SSL 2.0 (no
\begin_inset space ~
\end_inset

seguro)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset

No especificado
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

SSL 3.0 (no
\begin_inset space ~
\end_inset

seguro)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Desactivado por defecto
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Desactivado por defecto
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Desactivado por defecto
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Desactivado por defecto
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset

No especificado
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

TLS 1.0
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

TLS 1.1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

TLS 1.2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

DTLS 1.0
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset

No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset

No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

DTLS 1.2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset

No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset

No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

NSA suite B
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset


\color red
Certificaciones FIPS 140 de nivel 1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

wolfCrypt FIPS Module: 3.6.0 (#2425)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

SafeZone FIPS Cryptographic Mudule: 11 (#2389)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Conocido por
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Usado en MySQL
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Parte del proyecto mbed de ARM
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

No aplica
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

No aplica
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

No aplica
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Comparación de las bibliotecas analizadas: datos generales, licencia y compatibi
lidad con los distintos estándares TLS
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Notice that despite these differences, all of the considered libraries meet
 the following features.
 
\end_layout

\begin_layout Itemize
Programming language: standard C (and assembly, in some cases) 
\end_layout

\begin_layout Itemize
TLS 1.2 supported 
\end_layout

\begin_layout Itemize
US’s National Security Agency (NSA) suite B supported, which is composed
 of 
\end_layout

\begin_deeper
\begin_layout Itemize
Advanced Encryption Standard – AES-128 and AES-256, with either CTR mode
 or GCM mode (symmetric encryption) 
\end_layout

\begin_layout Itemize
Elliptic Curve Digital Signature Algorithm – ECDSA (digital signatures)
 Elliptic Curve Diffie-Hellman – ECDH (key agreement) 
\end_layout

\begin_layout Itemize
Secure Hash Algorithm 2 – SHA-256 and SHA-384 (message digest) 
\end_layout

\end_deeper
\begin_layout Itemize
Suitable size for embedded systems 
\end_layout

\begin_layout Itemize
ARM compatible
\end_layout

\begin_layout Subsection
Compatibilidad con el sistema objetivo
\end_layout

\begin_layout Standard
Como desarrollaremos en el 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Descripción-del-sistema"

\end_inset

, el sistema objetivo está basado en un procesador de la familia ARM Cortex
 M4, en el que se ejecuta CMSIS-RTOS como sistema operativo de tiempo real
 y se usa light-weight IP (lwIP) para implementar la pila de protocolos
 TCP/IP y UDP/IP.
\end_layout

\begin_layout Standard
Estos aspectos deben considerarse cuidadosamente a la hora de elegir la
 biblioteca TLS a implementar.
 En esta sección trataremos los aspectos de compatibilidad con el sistema
 objetivo, así como la disponibilidad de documentación y de otros recursos.
\end_layout

\begin_layout Standard
Además de los criterios mencionados al comienzo de este capítulo, evaluaremos:
\end_layout

\begin_layout Itemize
Support for CMSIS-RTOS – reduce development time 
\end_layout

\begin_layout Itemize
Support for lwIP – reduce development time MQTT facilities – reduce development
 time
\end_layout

\begin_layout Standard
La 
\begin_inset CommandInset ref
LatexCommand formatted
reference "tab:Comparación-doc+compatib"

\end_inset

 muestra un resumen de la información obtenida a partir de fuentes oficiales
 de cada una de las implementaciones al respecto.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arrayrulewidth=1.3pt
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="6">
<features islongtable="true" headBottomDL="true" longtabularalignment="center">
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="2cm">
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arrayrulecolor{white}
\backslash
rowcolor{head}
\backslash
color{white}
\end_layout

\end_inset


\size small
Implemen-tación
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{white}
\end_layout

\end_inset

WolfSSL
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{white}
\end_layout

\end_inset

mbedTLS
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{white}
\end_layout

\end_inset

MatrixSSL
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{white}
\end_layout

\end_inset

cryptlyb
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{white}
\end_layout

\end_inset

SharkSSL
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Disponibilidad de documentación
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Disponible de forma abierta en la web oficial.
 Exhaustiva y bien organizada.
 Numerosos recursos en línea
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Disponible de forma abierta en la web oficial.
 Exhaustiva y bien organizada.
 Numerosos recursos en línea
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Disponible de forma abierta en forma de PDF, descargable desde el repositorio
 oficial.
 Recursos en línea limitados
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Disponible de forma abierta en forma de manual PDF.
 Recursos en línea limitados
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset

No disponible de forma abierta (es necesario registrarse para probar ejemplos).
 Sin recursos en línea
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Comunidad 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset


\size default
Muy activa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset


\size default
Muy activa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset


\size default
Poco activa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset


\size default
Poco activa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset


\size default
Inexistente
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Soporte para ingenieros
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Foro para Q&A.
 Soporte por e-mail.
 GitHub Issues
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Foro para Q&A.
 Soporte por e-mail.
 GitHub Issues
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Soporte por e-mail.
 GitHub Issues
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Soporte por e-mail.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Soporte por e-mail.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Disponibilidad del código fuente
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Disponible en GitHub (
\color red
73+
\color inherit
 versiones estables).
 Disponible el código de la última versión estable en la web oficial
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Disponible en GitHub (
\color red
99+
\color inherit
 versiones estables).
 Disponibles varias versiones estables en la web oficial
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Disponible en GitHub (
\color red
2+
\color inherit
 versiones estables).
 Disponibles 46+ versiones estables en la web oficial
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Bajo demanda, tras rellenar un formulario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset

No disponible antes de la adquisición de la licencia
\end_layout

\end_inset
</cell>
</row>
<row newpage="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Presencia en las redes sociales
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Web clara, GitHub, Twitter, Facebook, Linkedin
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Web clara, GitHub, Twitter, Facebook, Linkedin
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Web plana, GitHub, blog
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset

Web poco clara, blog
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{meh}
\end_layout

\end_inset

Web clara
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Soporte para CMSIS-RTOS
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, característica incluida
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, característica incluida
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset

No se mencina en la web
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, característica incluida.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset

Con soporte para MDK-ARM y mbed
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Soporte para lwIP
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, característica incluida
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, característica incluida
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset

No se mencina en la web
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{bad}
\end_layout

\end_inset

No se mencina en la web ni en la documentación
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Comparación-doc+compatib"

\end_inset

Comparación de las bibliotecas analizadas: disponibilidad de documentación
 y soporte y compatibilidad con el sistema objetivo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Elección de la biblioteca
\end_layout

\begin_layout Standard
Having a look at the tables above, it is evident that WolfSSL and mbed TLS
 are the most suitable options.
 For this reason, they have been further analyzed.
 A closer comparison is presented below.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arrayrulewidth=1.3pt
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="4cm">
<column alignment="left" valignment="top" width="4cm">
<column alignment="left" valignment="top" width="4cm">
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
arrayrulecolor{white}
\backslash
rowcolor{head}
\backslash
color{white}
\end_layout

\end_inset


\size small
Implementación
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{white}
\end_layout

\end_inset

WolfSSL
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
color{white}
\end_layout

\end_inset

mbedTLS
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Compilación en MS Windows
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, con el proyecto de Visual Studio incluido
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, con el proyecto de Visual Studio incluido y con la IDE Eclipse
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Compilación en GNU/Linux
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, usando Make
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, usando Make y CMake
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Configuración de la biblioteca
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, en la forma de un fichero de configuración que modifica el comportamiento
 de Make
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, modificando el fichero config.h
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Soporte para otros sistemas operativos de tiempo real (RTOS)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, incluyendo Linux embebido, FreeRTOS, TinyOS y 
\begin_inset Formula $\mu$
\end_inset

C/OS.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, incluyendo FreeRTOS, SEGGER, embedOS y eCOS.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Tests funcionales y comprobaciones de integridad
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, conjunto de tests incluido
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí, conjunto de tests incluido
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Compatible con OpenSSL
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{head}
\backslash
color{white}
\end_layout

\end_inset

Disponibilidad de una versión con funcionalidades mínimas
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cellcolor{good}
\end_layout

\end_inset

Sí
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Comparación de WolfSSL y mbedTLS: características de compilación y configuración
 de la biblioteca
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A series of different TLS implementations have been analyzed and compared.
 Both open source and privative implementations have been considered.
 Among all the compared alternatives, WolfSSL and mbed TLS appear to be
 the most developed ones.
 They also have the strongest communities, widest presence in social networks,
 largest documentation and biggest development rate.
 For these reasons, WolfSSL and mbed TLS are concluded to better fit target
 system’s requirements.
 Checking the available information on WolfSSL and mbed TLS websites does
 not bring to a clear close.
 Actually, both libraries seem to have much the same features.
 Maybe diving into the code and performing some compilation tests would
 be convenient to end up with a definitive conclusion.
 
\end_layout

\begin_layout Standard
Tras valorar estas opciones, decidimos mbedTLS por los siguientes motivos:
 
\end_layout

\begin_layout Itemize
#
\end_layout

\begin_layout Itemize
#
\end_layout

\begin_layout Itemize
#
\end_layout

\begin_layout Itemize
#
\end_layout

\end_body
\end_document
