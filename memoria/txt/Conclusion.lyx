#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\master content.lyx
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Part
Conclusiones y trabajo futuro
\end_layout

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:Conclusiones-y-trabajo-futuro"

\end_inset

Conclusiones y trabajo futuro
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
resumen del trabajo realizado, resaltando por qué es importante
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
en este trabajo hemos implementado...
 para ello, hemos tenido que...
 (tipo bricomanía)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tras la consecución de este trabajo hemos conseguido conectar un dispositivo
 que forma parte de un sistema 
\lang english
SmartHome
\lang spanish
 con la nube de Amazon (AWS
\begin_inset space ~
\end_inset

IoT).
 Para ello, hemos tenido que integrar el protocolo TLS y el AWS
\begin_inset space ~
\end_inset

IoT Device SKD en el sistema, que está basado en el microcontrolador XMC4500
 (ARM Cortex-M4).
 La implementación de TLS utilizada ha sido mbedTLS de ARM.
 Los resultados obtenidos con este se exponen de forma más pormenorizada
 a continuación.
\end_layout

\begin_layout Section
Conclusiones
\end_layout

\begin_layout Standard
Hemos podido comprobar que el sistema se comunica de forma segura con la
 Nube.
 Con los tests explicados en la 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:mbedTLS-test-programs"

\end_inset

, hemos visto que podemos llevar a cabo conexiones seguras.
 Estas conexiones se han visualizado usando Wireshark, pudiendo comprobar
 que el handshake se produce con éxito y que la conexión está realmente
 encriptada.
\end_layout

\begin_layout Standard
Tenemos un sistema donde puede configurarse la seguridad en tiempo de compilació
n, eligiendo las 
\lang english
ciphersuites
\lang spanish
 que sean necesarias en cada caso.
 Para la aplicación estudiada (
\lang english
SmartHome gateway
\lang spanish
 comunicándose con AWS
\begin_inset space ~
\end_inset

IoT) hemos usado las configuraciones que la plataforma recomienda.
 Sin embargo, la integración realizada puede modificarse fácilmente para
 conseguir la compatibilidad con otras plataformas.
\end_layout

\begin_layout Standard
En cuanto al uso de memoria, hemos comprobado que la aplicación necesita
 17KB de stack, y más de 35KB de heap.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
 El uso de heap en un sistema embebido es difícil de medir.
 Sin embargo, hemos comprobado en Valgrind el ejemplo ssl_cliente con las
 mismas opciones y hemos llegado a un uso de ##### (sistema GNU/Linux).
\end_layout

\end_inset

 Hemos podido comprobar que 1MB de RAM (memoria disponible en el XMC4500)
 es suficiente para llevar a cabo transacciones seguras.
 Aunque esto supone un incremento en el tiempo de desarrollo, las empresas
 del sector IoT no deberían descuidar la seguridad de los datos de los usuarios.
 Solo de esta forma podremos avanzar hacia un mundo realmente interconectado
 y proporcionar los nuevos servicios que llevamos años divisando.
\end_layout

\begin_layout Section
Trabajo futuro
\end_layout

\begin_layout Standard
Los compañeros de la empresa eesy-innovation deberán integrar la solución
 propuesta en el sistema final.
 Además, se proponen las siguientes líneas de trabajo, con las que se podría
 mejorar el producto.
\end_layout

\begin_layout Enumerate
Caracterización de la generación de números aleatorios propuesta.
 Aunque tenemos indicios para pensar que la distribución de los números
 aleatorios generados será bastante homogénea, sería conveniente comprobarlo
 a través de la caracterización del módulo utilizado en varias ejecuciones
 de los tests.
\end_layout

\begin_layout Enumerate
Automatización de la definición de dispositivos virtuales en producción.
 Será necesario automatizar el proceso de definición de dispositivos virtuales
 en la plataforma AWS
\begin_inset space ~
\end_inset

IoT, así como la configuración de los dispositivos físicos con los mismos
 parámetros.
\end_layout

\begin_layout Enumerate
Uso del miniGW como pasarela IoT.
 En este proyecto, el miniGW ha estado asociado a un único dispositivo virtual.
 Esto no se ajusta al escenario de producción, en el que los dispositivos
 virtuales están asociados a los nodos finales de la red, esto es, los sensores
 y actuadores.
\end_layout

\begin_layout Enumerate
Definición de políticas de acceso que se ajusten al sistema.
 En el caso que nos ocupa, hemos usado una política de acceso extremadamente
 laxa para la realización del test.
 Esta configuración nos aseguraba que los problemas vendrían de otro sitio.
 En cambio, será necesario definir una política de acceso adecuada al escenario
 de producción.
\end_layout

\end_body
\end_document
