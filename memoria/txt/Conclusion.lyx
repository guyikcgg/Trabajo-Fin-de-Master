#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\master content.lyx
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Part
Conclusiones y trabajo futuro
\end_layout

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:Conclusiones-y-trabajo-futuro"

\end_inset

Conclusiones y trabajo futuro
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
resumen del trabajo realizado, resaltando por qué es importante
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
en este trabajo hemos implementado...
 para ello, hemos tenido que...
 (tipo bricomanía)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como hemos visto, en este trabajo hemos integrado el protocolo TLS en un
 sistema embebido que forma parte de un sistema SmartHome basado en tecnología
 IoT.
 Hemos podido probar el sistema:
\end_layout

\begin_layout Section
Integración de la seguridad
\end_layout

\begin_layout Standard
Hemos podido comprobar que tenemos seguridad.
 Con los tests explicados en ## hemos visto que podemos realizar conexiones
 seguras.
 Estas conexiones se han visualizado usando Wireshark, pudiendo comprobar
 que la conexión está realmente encriptada.
\end_layout

\begin_layout Standard
Tenemos un sistema donde puede configurarse la seguridad en tiempo de compilació
n: distintas ciphersuites.
 Para la aplicación estudiada (SmartHome gateway con AWS IoT) hemos dejado
 las configuraciones que la plataforma recomienda.
 Sin embargo, la integración realizada tiene mucho más potencial.
\end_layout

\begin_layout Standard
En cuanto a uso de memoria, hemos comprobado que necesitamos 10kB de stack,
 y probablemente mucho heap.
 El uso de heap en un sistema embebido es difícil de medir.
 Sin embargo, hemos comprobado en Valgrind el ejemplo ssl_cliente con las
 mismas opciones y hemos llegado a un uso de ##### (sistema GNU/Linux).
\end_layout

\begin_layout Standard
Sin lugar a dudas, 1MB de RAM como tiene el XMC4500 es suficiente para llevar
 a cabo transacciones seguras.
 Las empresas deberían tomarse esto en serio a la hora de diseñar dispositivos
 para IoT -> conclusión!
\end_layout

\begin_layout Section
Integración de AWS IoT SDK
\end_layout

\begin_layout Standard
En este trabajo presentamos un ejemplo de conexión de un dispositivo sensor
 a la plataforma de Amazon AWS
\begin_inset space ~
\end_inset

IoT, al tratarse esta de una de las más usadas por las empresas que actualmente
 intentan abrirse mercado en el paradigma IoT.
\end_layout

\begin_layout Standard
Nuestro dispositivo se conectará a la nube de Amazon Web Services para IoT
 (
\emph on
AWS
\begin_inset space ~
\end_inset

IoT
\emph default
).
 La comunicación entre el dispositivo y la nube se llevará a cabo a través
 del protocolo MQTT, tras haber establecido un canal seguro mediante TLS.
\end_layout

\end_body
\end_document
